// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/wire.proto

package godot.wire;

public final class Wire {
  private Wire() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface Vector2OrBuilder extends
      // @@protoc_insertion_point(interface_extends:Vector2)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>float x = 1;</code>
     * @return The x.
     */
    float getX();

    /**
     * <code>float y = 2;</code>
     * @return The y.
     */
    float getY();
  }
  /**
   * Protobuf type {@code Vector2}
   */
  public static final class Vector2 extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Vector2)
      Vector2OrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Vector2.newBuilder() to construct.
    private Vector2(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Vector2() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Vector2();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Vector2(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 13: {

              x_ = input.readFloat();
              break;
            }
            case 21: {

              y_ = input.readFloat();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return godot.wire.Wire.internal_static_Vector2_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return godot.wire.Wire.internal_static_Vector2_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              godot.wire.Wire.Vector2.class, godot.wire.Wire.Vector2.Builder.class);
    }

    public static final int X_FIELD_NUMBER = 1;
    private float x_;
    /**
     * <code>float x = 1;</code>
     * @return The x.
     */
    @java.lang.Override
    public float getX() {
      return x_;
    }

    public static final int Y_FIELD_NUMBER = 2;
    private float y_;
    /**
     * <code>float y = 2;</code>
     * @return The y.
     */
    @java.lang.Override
    public float getY() {
      return y_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (x_ != 0F) {
        output.writeFloat(1, x_);
      }
      if (y_ != 0F) {
        output.writeFloat(2, y_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (x_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, x_);
      }
      if (y_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, y_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof godot.wire.Wire.Vector2)) {
        return super.equals(obj);
      }
      godot.wire.Wire.Vector2 other = (godot.wire.Wire.Vector2) obj;

      if (java.lang.Float.floatToIntBits(getX())
          != java.lang.Float.floatToIntBits(
              other.getX())) return false;
      if (java.lang.Float.floatToIntBits(getY())
          != java.lang.Float.floatToIntBits(
              other.getY())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + X_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getX());
      hash = (37 * hash) + Y_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getY());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static godot.wire.Wire.Vector2 parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static godot.wire.Wire.Vector2 parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static godot.wire.Wire.Vector2 parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static godot.wire.Wire.Vector2 parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static godot.wire.Wire.Vector2 parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static godot.wire.Wire.Vector2 parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static godot.wire.Wire.Vector2 parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static godot.wire.Wire.Vector2 parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static godot.wire.Wire.Vector2 parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static godot.wire.Wire.Vector2 parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static godot.wire.Wire.Vector2 parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static godot.wire.Wire.Vector2 parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(godot.wire.Wire.Vector2 prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Vector2}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Vector2)
        godot.wire.Wire.Vector2OrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return godot.wire.Wire.internal_static_Vector2_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return godot.wire.Wire.internal_static_Vector2_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                godot.wire.Wire.Vector2.class, godot.wire.Wire.Vector2.Builder.class);
      }

      // Construct using godot.wire.Wire.Vector2.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        x_ = 0F;

        y_ = 0F;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return godot.wire.Wire.internal_static_Vector2_descriptor;
      }

      @java.lang.Override
      public godot.wire.Wire.Vector2 getDefaultInstanceForType() {
        return godot.wire.Wire.Vector2.getDefaultInstance();
      }

      @java.lang.Override
      public godot.wire.Wire.Vector2 build() {
        godot.wire.Wire.Vector2 result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public godot.wire.Wire.Vector2 buildPartial() {
        godot.wire.Wire.Vector2 result = new godot.wire.Wire.Vector2(this);
        result.x_ = x_;
        result.y_ = y_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof godot.wire.Wire.Vector2) {
          return mergeFrom((godot.wire.Wire.Vector2)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(godot.wire.Wire.Vector2 other) {
        if (other == godot.wire.Wire.Vector2.getDefaultInstance()) return this;
        if (other.getX() != 0F) {
          setX(other.getX());
        }
        if (other.getY() != 0F) {
          setY(other.getY());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        godot.wire.Wire.Vector2 parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (godot.wire.Wire.Vector2) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private float x_ ;
      /**
       * <code>float x = 1;</code>
       * @return The x.
       */
      @java.lang.Override
      public float getX() {
        return x_;
      }
      /**
       * <code>float x = 1;</code>
       * @param value The x to set.
       * @return This builder for chaining.
       */
      public Builder setX(float value) {
        
        x_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float x = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearX() {
        
        x_ = 0F;
        onChanged();
        return this;
      }

      private float y_ ;
      /**
       * <code>float y = 2;</code>
       * @return The y.
       */
      @java.lang.Override
      public float getY() {
        return y_;
      }
      /**
       * <code>float y = 2;</code>
       * @param value The y to set.
       * @return This builder for chaining.
       */
      public Builder setY(float value) {
        
        y_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float y = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearY() {
        
        y_ = 0F;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Vector2)
    }

    // @@protoc_insertion_point(class_scope:Vector2)
    private static final godot.wire.Wire.Vector2 DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new godot.wire.Wire.Vector2();
    }

    public static godot.wire.Wire.Vector2 getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Vector2>
        PARSER = new com.google.protobuf.AbstractParser<Vector2>() {
      @java.lang.Override
      public Vector2 parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Vector2(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Vector2> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Vector2> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public godot.wire.Wire.Vector2 getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface Rect2OrBuilder extends
      // @@protoc_insertion_point(interface_extends:Rect2)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.Vector2 position = 1;</code>
     * @return Whether the position field is set.
     */
    boolean hasPosition();
    /**
     * <code>.Vector2 position = 1;</code>
     * @return The position.
     */
    godot.wire.Wire.Vector2 getPosition();
    /**
     * <code>.Vector2 position = 1;</code>
     */
    godot.wire.Wire.Vector2OrBuilder getPositionOrBuilder();

    /**
     * <code>.Vector2 size = 2;</code>
     * @return Whether the size field is set.
     */
    boolean hasSize();
    /**
     * <code>.Vector2 size = 2;</code>
     * @return The size.
     */
    godot.wire.Wire.Vector2 getSize();
    /**
     * <code>.Vector2 size = 2;</code>
     */
    godot.wire.Wire.Vector2OrBuilder getSizeOrBuilder();
  }
  /**
   * Protobuf type {@code Rect2}
   */
  public static final class Rect2 extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Rect2)
      Rect2OrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Rect2.newBuilder() to construct.
    private Rect2(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Rect2() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Rect2();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Rect2(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              godot.wire.Wire.Vector2.Builder subBuilder = null;
              if (position_ != null) {
                subBuilder = position_.toBuilder();
              }
              position_ = input.readMessage(godot.wire.Wire.Vector2.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(position_);
                position_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              godot.wire.Wire.Vector2.Builder subBuilder = null;
              if (size_ != null) {
                subBuilder = size_.toBuilder();
              }
              size_ = input.readMessage(godot.wire.Wire.Vector2.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(size_);
                size_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return godot.wire.Wire.internal_static_Rect2_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return godot.wire.Wire.internal_static_Rect2_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              godot.wire.Wire.Rect2.class, godot.wire.Wire.Rect2.Builder.class);
    }

    public static final int POSITION_FIELD_NUMBER = 1;
    private godot.wire.Wire.Vector2 position_;
    /**
     * <code>.Vector2 position = 1;</code>
     * @return Whether the position field is set.
     */
    @java.lang.Override
    public boolean hasPosition() {
      return position_ != null;
    }
    /**
     * <code>.Vector2 position = 1;</code>
     * @return The position.
     */
    @java.lang.Override
    public godot.wire.Wire.Vector2 getPosition() {
      return position_ == null ? godot.wire.Wire.Vector2.getDefaultInstance() : position_;
    }
    /**
     * <code>.Vector2 position = 1;</code>
     */
    @java.lang.Override
    public godot.wire.Wire.Vector2OrBuilder getPositionOrBuilder() {
      return getPosition();
    }

    public static final int SIZE_FIELD_NUMBER = 2;
    private godot.wire.Wire.Vector2 size_;
    /**
     * <code>.Vector2 size = 2;</code>
     * @return Whether the size field is set.
     */
    @java.lang.Override
    public boolean hasSize() {
      return size_ != null;
    }
    /**
     * <code>.Vector2 size = 2;</code>
     * @return The size.
     */
    @java.lang.Override
    public godot.wire.Wire.Vector2 getSize() {
      return size_ == null ? godot.wire.Wire.Vector2.getDefaultInstance() : size_;
    }
    /**
     * <code>.Vector2 size = 2;</code>
     */
    @java.lang.Override
    public godot.wire.Wire.Vector2OrBuilder getSizeOrBuilder() {
      return getSize();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (position_ != null) {
        output.writeMessage(1, getPosition());
      }
      if (size_ != null) {
        output.writeMessage(2, getSize());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (position_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getPosition());
      }
      if (size_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getSize());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof godot.wire.Wire.Rect2)) {
        return super.equals(obj);
      }
      godot.wire.Wire.Rect2 other = (godot.wire.Wire.Rect2) obj;

      if (hasPosition() != other.hasPosition()) return false;
      if (hasPosition()) {
        if (!getPosition()
            .equals(other.getPosition())) return false;
      }
      if (hasSize() != other.hasSize()) return false;
      if (hasSize()) {
        if (!getSize()
            .equals(other.getSize())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasPosition()) {
        hash = (37 * hash) + POSITION_FIELD_NUMBER;
        hash = (53 * hash) + getPosition().hashCode();
      }
      if (hasSize()) {
        hash = (37 * hash) + SIZE_FIELD_NUMBER;
        hash = (53 * hash) + getSize().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static godot.wire.Wire.Rect2 parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static godot.wire.Wire.Rect2 parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static godot.wire.Wire.Rect2 parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static godot.wire.Wire.Rect2 parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static godot.wire.Wire.Rect2 parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static godot.wire.Wire.Rect2 parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static godot.wire.Wire.Rect2 parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static godot.wire.Wire.Rect2 parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static godot.wire.Wire.Rect2 parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static godot.wire.Wire.Rect2 parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static godot.wire.Wire.Rect2 parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static godot.wire.Wire.Rect2 parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(godot.wire.Wire.Rect2 prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Rect2}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Rect2)
        godot.wire.Wire.Rect2OrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return godot.wire.Wire.internal_static_Rect2_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return godot.wire.Wire.internal_static_Rect2_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                godot.wire.Wire.Rect2.class, godot.wire.Wire.Rect2.Builder.class);
      }

      // Construct using godot.wire.Wire.Rect2.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (positionBuilder_ == null) {
          position_ = null;
        } else {
          position_ = null;
          positionBuilder_ = null;
        }
        if (sizeBuilder_ == null) {
          size_ = null;
        } else {
          size_ = null;
          sizeBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return godot.wire.Wire.internal_static_Rect2_descriptor;
      }

      @java.lang.Override
      public godot.wire.Wire.Rect2 getDefaultInstanceForType() {
        return godot.wire.Wire.Rect2.getDefaultInstance();
      }

      @java.lang.Override
      public godot.wire.Wire.Rect2 build() {
        godot.wire.Wire.Rect2 result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public godot.wire.Wire.Rect2 buildPartial() {
        godot.wire.Wire.Rect2 result = new godot.wire.Wire.Rect2(this);
        if (positionBuilder_ == null) {
          result.position_ = position_;
        } else {
          result.position_ = positionBuilder_.build();
        }
        if (sizeBuilder_ == null) {
          result.size_ = size_;
        } else {
          result.size_ = sizeBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof godot.wire.Wire.Rect2) {
          return mergeFrom((godot.wire.Wire.Rect2)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(godot.wire.Wire.Rect2 other) {
        if (other == godot.wire.Wire.Rect2.getDefaultInstance()) return this;
        if (other.hasPosition()) {
          mergePosition(other.getPosition());
        }
        if (other.hasSize()) {
          mergeSize(other.getSize());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        godot.wire.Wire.Rect2 parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (godot.wire.Wire.Rect2) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private godot.wire.Wire.Vector2 position_;
      private com.google.protobuf.SingleFieldBuilderV3<
          godot.wire.Wire.Vector2, godot.wire.Wire.Vector2.Builder, godot.wire.Wire.Vector2OrBuilder> positionBuilder_;
      /**
       * <code>.Vector2 position = 1;</code>
       * @return Whether the position field is set.
       */
      public boolean hasPosition() {
        return positionBuilder_ != null || position_ != null;
      }
      /**
       * <code>.Vector2 position = 1;</code>
       * @return The position.
       */
      public godot.wire.Wire.Vector2 getPosition() {
        if (positionBuilder_ == null) {
          return position_ == null ? godot.wire.Wire.Vector2.getDefaultInstance() : position_;
        } else {
          return positionBuilder_.getMessage();
        }
      }
      /**
       * <code>.Vector2 position = 1;</code>
       */
      public Builder setPosition(godot.wire.Wire.Vector2 value) {
        if (positionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          position_ = value;
          onChanged();
        } else {
          positionBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.Vector2 position = 1;</code>
       */
      public Builder setPosition(
          godot.wire.Wire.Vector2.Builder builderForValue) {
        if (positionBuilder_ == null) {
          position_ = builderForValue.build();
          onChanged();
        } else {
          positionBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.Vector2 position = 1;</code>
       */
      public Builder mergePosition(godot.wire.Wire.Vector2 value) {
        if (positionBuilder_ == null) {
          if (position_ != null) {
            position_ =
              godot.wire.Wire.Vector2.newBuilder(position_).mergeFrom(value).buildPartial();
          } else {
            position_ = value;
          }
          onChanged();
        } else {
          positionBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.Vector2 position = 1;</code>
       */
      public Builder clearPosition() {
        if (positionBuilder_ == null) {
          position_ = null;
          onChanged();
        } else {
          position_ = null;
          positionBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.Vector2 position = 1;</code>
       */
      public godot.wire.Wire.Vector2.Builder getPositionBuilder() {
        
        onChanged();
        return getPositionFieldBuilder().getBuilder();
      }
      /**
       * <code>.Vector2 position = 1;</code>
       */
      public godot.wire.Wire.Vector2OrBuilder getPositionOrBuilder() {
        if (positionBuilder_ != null) {
          return positionBuilder_.getMessageOrBuilder();
        } else {
          return position_ == null ?
              godot.wire.Wire.Vector2.getDefaultInstance() : position_;
        }
      }
      /**
       * <code>.Vector2 position = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          godot.wire.Wire.Vector2, godot.wire.Wire.Vector2.Builder, godot.wire.Wire.Vector2OrBuilder> 
          getPositionFieldBuilder() {
        if (positionBuilder_ == null) {
          positionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              godot.wire.Wire.Vector2, godot.wire.Wire.Vector2.Builder, godot.wire.Wire.Vector2OrBuilder>(
                  getPosition(),
                  getParentForChildren(),
                  isClean());
          position_ = null;
        }
        return positionBuilder_;
      }

      private godot.wire.Wire.Vector2 size_;
      private com.google.protobuf.SingleFieldBuilderV3<
          godot.wire.Wire.Vector2, godot.wire.Wire.Vector2.Builder, godot.wire.Wire.Vector2OrBuilder> sizeBuilder_;
      /**
       * <code>.Vector2 size = 2;</code>
       * @return Whether the size field is set.
       */
      public boolean hasSize() {
        return sizeBuilder_ != null || size_ != null;
      }
      /**
       * <code>.Vector2 size = 2;</code>
       * @return The size.
       */
      public godot.wire.Wire.Vector2 getSize() {
        if (sizeBuilder_ == null) {
          return size_ == null ? godot.wire.Wire.Vector2.getDefaultInstance() : size_;
        } else {
          return sizeBuilder_.getMessage();
        }
      }
      /**
       * <code>.Vector2 size = 2;</code>
       */
      public Builder setSize(godot.wire.Wire.Vector2 value) {
        if (sizeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          size_ = value;
          onChanged();
        } else {
          sizeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.Vector2 size = 2;</code>
       */
      public Builder setSize(
          godot.wire.Wire.Vector2.Builder builderForValue) {
        if (sizeBuilder_ == null) {
          size_ = builderForValue.build();
          onChanged();
        } else {
          sizeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.Vector2 size = 2;</code>
       */
      public Builder mergeSize(godot.wire.Wire.Vector2 value) {
        if (sizeBuilder_ == null) {
          if (size_ != null) {
            size_ =
              godot.wire.Wire.Vector2.newBuilder(size_).mergeFrom(value).buildPartial();
          } else {
            size_ = value;
          }
          onChanged();
        } else {
          sizeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.Vector2 size = 2;</code>
       */
      public Builder clearSize() {
        if (sizeBuilder_ == null) {
          size_ = null;
          onChanged();
        } else {
          size_ = null;
          sizeBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.Vector2 size = 2;</code>
       */
      public godot.wire.Wire.Vector2.Builder getSizeBuilder() {
        
        onChanged();
        return getSizeFieldBuilder().getBuilder();
      }
      /**
       * <code>.Vector2 size = 2;</code>
       */
      public godot.wire.Wire.Vector2OrBuilder getSizeOrBuilder() {
        if (sizeBuilder_ != null) {
          return sizeBuilder_.getMessageOrBuilder();
        } else {
          return size_ == null ?
              godot.wire.Wire.Vector2.getDefaultInstance() : size_;
        }
      }
      /**
       * <code>.Vector2 size = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          godot.wire.Wire.Vector2, godot.wire.Wire.Vector2.Builder, godot.wire.Wire.Vector2OrBuilder> 
          getSizeFieldBuilder() {
        if (sizeBuilder_ == null) {
          sizeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              godot.wire.Wire.Vector2, godot.wire.Wire.Vector2.Builder, godot.wire.Wire.Vector2OrBuilder>(
                  getSize(),
                  getParentForChildren(),
                  isClean());
          size_ = null;
        }
        return sizeBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Rect2)
    }

    // @@protoc_insertion_point(class_scope:Rect2)
    private static final godot.wire.Wire.Rect2 DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new godot.wire.Wire.Rect2();
    }

    public static godot.wire.Wire.Rect2 getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Rect2>
        PARSER = new com.google.protobuf.AbstractParser<Rect2>() {
      @java.lang.Override
      public Rect2 parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Rect2(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Rect2> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Rect2> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public godot.wire.Wire.Rect2 getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface Vector3OrBuilder extends
      // @@protoc_insertion_point(interface_extends:Vector3)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>float x = 1;</code>
     * @return The x.
     */
    float getX();

    /**
     * <code>float y = 2;</code>
     * @return The y.
     */
    float getY();

    /**
     * <code>float z = 3;</code>
     * @return The z.
     */
    float getZ();
  }
  /**
   * Protobuf type {@code Vector3}
   */
  public static final class Vector3 extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Vector3)
      Vector3OrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Vector3.newBuilder() to construct.
    private Vector3(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Vector3() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Vector3();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Vector3(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 13: {

              x_ = input.readFloat();
              break;
            }
            case 21: {

              y_ = input.readFloat();
              break;
            }
            case 29: {

              z_ = input.readFloat();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return godot.wire.Wire.internal_static_Vector3_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return godot.wire.Wire.internal_static_Vector3_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              godot.wire.Wire.Vector3.class, godot.wire.Wire.Vector3.Builder.class);
    }

    public static final int X_FIELD_NUMBER = 1;
    private float x_;
    /**
     * <code>float x = 1;</code>
     * @return The x.
     */
    @java.lang.Override
    public float getX() {
      return x_;
    }

    public static final int Y_FIELD_NUMBER = 2;
    private float y_;
    /**
     * <code>float y = 2;</code>
     * @return The y.
     */
    @java.lang.Override
    public float getY() {
      return y_;
    }

    public static final int Z_FIELD_NUMBER = 3;
    private float z_;
    /**
     * <code>float z = 3;</code>
     * @return The z.
     */
    @java.lang.Override
    public float getZ() {
      return z_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (x_ != 0F) {
        output.writeFloat(1, x_);
      }
      if (y_ != 0F) {
        output.writeFloat(2, y_);
      }
      if (z_ != 0F) {
        output.writeFloat(3, z_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (x_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, x_);
      }
      if (y_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, y_);
      }
      if (z_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, z_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof godot.wire.Wire.Vector3)) {
        return super.equals(obj);
      }
      godot.wire.Wire.Vector3 other = (godot.wire.Wire.Vector3) obj;

      if (java.lang.Float.floatToIntBits(getX())
          != java.lang.Float.floatToIntBits(
              other.getX())) return false;
      if (java.lang.Float.floatToIntBits(getY())
          != java.lang.Float.floatToIntBits(
              other.getY())) return false;
      if (java.lang.Float.floatToIntBits(getZ())
          != java.lang.Float.floatToIntBits(
              other.getZ())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + X_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getX());
      hash = (37 * hash) + Y_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getY());
      hash = (37 * hash) + Z_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getZ());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static godot.wire.Wire.Vector3 parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static godot.wire.Wire.Vector3 parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static godot.wire.Wire.Vector3 parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static godot.wire.Wire.Vector3 parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static godot.wire.Wire.Vector3 parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static godot.wire.Wire.Vector3 parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static godot.wire.Wire.Vector3 parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static godot.wire.Wire.Vector3 parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static godot.wire.Wire.Vector3 parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static godot.wire.Wire.Vector3 parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static godot.wire.Wire.Vector3 parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static godot.wire.Wire.Vector3 parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(godot.wire.Wire.Vector3 prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Vector3}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Vector3)
        godot.wire.Wire.Vector3OrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return godot.wire.Wire.internal_static_Vector3_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return godot.wire.Wire.internal_static_Vector3_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                godot.wire.Wire.Vector3.class, godot.wire.Wire.Vector3.Builder.class);
      }

      // Construct using godot.wire.Wire.Vector3.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        x_ = 0F;

        y_ = 0F;

        z_ = 0F;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return godot.wire.Wire.internal_static_Vector3_descriptor;
      }

      @java.lang.Override
      public godot.wire.Wire.Vector3 getDefaultInstanceForType() {
        return godot.wire.Wire.Vector3.getDefaultInstance();
      }

      @java.lang.Override
      public godot.wire.Wire.Vector3 build() {
        godot.wire.Wire.Vector3 result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public godot.wire.Wire.Vector3 buildPartial() {
        godot.wire.Wire.Vector3 result = new godot.wire.Wire.Vector3(this);
        result.x_ = x_;
        result.y_ = y_;
        result.z_ = z_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof godot.wire.Wire.Vector3) {
          return mergeFrom((godot.wire.Wire.Vector3)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(godot.wire.Wire.Vector3 other) {
        if (other == godot.wire.Wire.Vector3.getDefaultInstance()) return this;
        if (other.getX() != 0F) {
          setX(other.getX());
        }
        if (other.getY() != 0F) {
          setY(other.getY());
        }
        if (other.getZ() != 0F) {
          setZ(other.getZ());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        godot.wire.Wire.Vector3 parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (godot.wire.Wire.Vector3) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private float x_ ;
      /**
       * <code>float x = 1;</code>
       * @return The x.
       */
      @java.lang.Override
      public float getX() {
        return x_;
      }
      /**
       * <code>float x = 1;</code>
       * @param value The x to set.
       * @return This builder for chaining.
       */
      public Builder setX(float value) {
        
        x_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float x = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearX() {
        
        x_ = 0F;
        onChanged();
        return this;
      }

      private float y_ ;
      /**
       * <code>float y = 2;</code>
       * @return The y.
       */
      @java.lang.Override
      public float getY() {
        return y_;
      }
      /**
       * <code>float y = 2;</code>
       * @param value The y to set.
       * @return This builder for chaining.
       */
      public Builder setY(float value) {
        
        y_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float y = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearY() {
        
        y_ = 0F;
        onChanged();
        return this;
      }

      private float z_ ;
      /**
       * <code>float z = 3;</code>
       * @return The z.
       */
      @java.lang.Override
      public float getZ() {
        return z_;
      }
      /**
       * <code>float z = 3;</code>
       * @param value The z to set.
       * @return This builder for chaining.
       */
      public Builder setZ(float value) {
        
        z_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float z = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearZ() {
        
        z_ = 0F;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Vector3)
    }

    // @@protoc_insertion_point(class_scope:Vector3)
    private static final godot.wire.Wire.Vector3 DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new godot.wire.Wire.Vector3();
    }

    public static godot.wire.Wire.Vector3 getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Vector3>
        PARSER = new com.google.protobuf.AbstractParser<Vector3>() {
      @java.lang.Override
      public Vector3 parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Vector3(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Vector3> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Vector3> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public godot.wire.Wire.Vector3 getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface Transform2DOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Transform2D)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.Vector2 x = 1;</code>
     * @return Whether the x field is set.
     */
    boolean hasX();
    /**
     * <code>.Vector2 x = 1;</code>
     * @return The x.
     */
    godot.wire.Wire.Vector2 getX();
    /**
     * <code>.Vector2 x = 1;</code>
     */
    godot.wire.Wire.Vector2OrBuilder getXOrBuilder();

    /**
     * <code>.Vector2 y = 2;</code>
     * @return Whether the y field is set.
     */
    boolean hasY();
    /**
     * <code>.Vector2 y = 2;</code>
     * @return The y.
     */
    godot.wire.Wire.Vector2 getY();
    /**
     * <code>.Vector2 y = 2;</code>
     */
    godot.wire.Wire.Vector2OrBuilder getYOrBuilder();

    /**
     * <code>.Vector2 origin = 3;</code>
     * @return Whether the origin field is set.
     */
    boolean hasOrigin();
    /**
     * <code>.Vector2 origin = 3;</code>
     * @return The origin.
     */
    godot.wire.Wire.Vector2 getOrigin();
    /**
     * <code>.Vector2 origin = 3;</code>
     */
    godot.wire.Wire.Vector2OrBuilder getOriginOrBuilder();
  }
  /**
   * Protobuf type {@code Transform2D}
   */
  public static final class Transform2D extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Transform2D)
      Transform2DOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Transform2D.newBuilder() to construct.
    private Transform2D(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Transform2D() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Transform2D();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Transform2D(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              godot.wire.Wire.Vector2.Builder subBuilder = null;
              if (x_ != null) {
                subBuilder = x_.toBuilder();
              }
              x_ = input.readMessage(godot.wire.Wire.Vector2.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(x_);
                x_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              godot.wire.Wire.Vector2.Builder subBuilder = null;
              if (y_ != null) {
                subBuilder = y_.toBuilder();
              }
              y_ = input.readMessage(godot.wire.Wire.Vector2.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(y_);
                y_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              godot.wire.Wire.Vector2.Builder subBuilder = null;
              if (origin_ != null) {
                subBuilder = origin_.toBuilder();
              }
              origin_ = input.readMessage(godot.wire.Wire.Vector2.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(origin_);
                origin_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return godot.wire.Wire.internal_static_Transform2D_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return godot.wire.Wire.internal_static_Transform2D_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              godot.wire.Wire.Transform2D.class, godot.wire.Wire.Transform2D.Builder.class);
    }

    public static final int X_FIELD_NUMBER = 1;
    private godot.wire.Wire.Vector2 x_;
    /**
     * <code>.Vector2 x = 1;</code>
     * @return Whether the x field is set.
     */
    @java.lang.Override
    public boolean hasX() {
      return x_ != null;
    }
    /**
     * <code>.Vector2 x = 1;</code>
     * @return The x.
     */
    @java.lang.Override
    public godot.wire.Wire.Vector2 getX() {
      return x_ == null ? godot.wire.Wire.Vector2.getDefaultInstance() : x_;
    }
    /**
     * <code>.Vector2 x = 1;</code>
     */
    @java.lang.Override
    public godot.wire.Wire.Vector2OrBuilder getXOrBuilder() {
      return getX();
    }

    public static final int Y_FIELD_NUMBER = 2;
    private godot.wire.Wire.Vector2 y_;
    /**
     * <code>.Vector2 y = 2;</code>
     * @return Whether the y field is set.
     */
    @java.lang.Override
    public boolean hasY() {
      return y_ != null;
    }
    /**
     * <code>.Vector2 y = 2;</code>
     * @return The y.
     */
    @java.lang.Override
    public godot.wire.Wire.Vector2 getY() {
      return y_ == null ? godot.wire.Wire.Vector2.getDefaultInstance() : y_;
    }
    /**
     * <code>.Vector2 y = 2;</code>
     */
    @java.lang.Override
    public godot.wire.Wire.Vector2OrBuilder getYOrBuilder() {
      return getY();
    }

    public static final int ORIGIN_FIELD_NUMBER = 3;
    private godot.wire.Wire.Vector2 origin_;
    /**
     * <code>.Vector2 origin = 3;</code>
     * @return Whether the origin field is set.
     */
    @java.lang.Override
    public boolean hasOrigin() {
      return origin_ != null;
    }
    /**
     * <code>.Vector2 origin = 3;</code>
     * @return The origin.
     */
    @java.lang.Override
    public godot.wire.Wire.Vector2 getOrigin() {
      return origin_ == null ? godot.wire.Wire.Vector2.getDefaultInstance() : origin_;
    }
    /**
     * <code>.Vector2 origin = 3;</code>
     */
    @java.lang.Override
    public godot.wire.Wire.Vector2OrBuilder getOriginOrBuilder() {
      return getOrigin();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (x_ != null) {
        output.writeMessage(1, getX());
      }
      if (y_ != null) {
        output.writeMessage(2, getY());
      }
      if (origin_ != null) {
        output.writeMessage(3, getOrigin());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (x_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getX());
      }
      if (y_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getY());
      }
      if (origin_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getOrigin());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof godot.wire.Wire.Transform2D)) {
        return super.equals(obj);
      }
      godot.wire.Wire.Transform2D other = (godot.wire.Wire.Transform2D) obj;

      if (hasX() != other.hasX()) return false;
      if (hasX()) {
        if (!getX()
            .equals(other.getX())) return false;
      }
      if (hasY() != other.hasY()) return false;
      if (hasY()) {
        if (!getY()
            .equals(other.getY())) return false;
      }
      if (hasOrigin() != other.hasOrigin()) return false;
      if (hasOrigin()) {
        if (!getOrigin()
            .equals(other.getOrigin())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasX()) {
        hash = (37 * hash) + X_FIELD_NUMBER;
        hash = (53 * hash) + getX().hashCode();
      }
      if (hasY()) {
        hash = (37 * hash) + Y_FIELD_NUMBER;
        hash = (53 * hash) + getY().hashCode();
      }
      if (hasOrigin()) {
        hash = (37 * hash) + ORIGIN_FIELD_NUMBER;
        hash = (53 * hash) + getOrigin().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static godot.wire.Wire.Transform2D parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static godot.wire.Wire.Transform2D parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static godot.wire.Wire.Transform2D parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static godot.wire.Wire.Transform2D parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static godot.wire.Wire.Transform2D parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static godot.wire.Wire.Transform2D parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static godot.wire.Wire.Transform2D parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static godot.wire.Wire.Transform2D parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static godot.wire.Wire.Transform2D parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static godot.wire.Wire.Transform2D parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static godot.wire.Wire.Transform2D parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static godot.wire.Wire.Transform2D parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(godot.wire.Wire.Transform2D prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Transform2D}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Transform2D)
        godot.wire.Wire.Transform2DOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return godot.wire.Wire.internal_static_Transform2D_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return godot.wire.Wire.internal_static_Transform2D_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                godot.wire.Wire.Transform2D.class, godot.wire.Wire.Transform2D.Builder.class);
      }

      // Construct using godot.wire.Wire.Transform2D.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (xBuilder_ == null) {
          x_ = null;
        } else {
          x_ = null;
          xBuilder_ = null;
        }
        if (yBuilder_ == null) {
          y_ = null;
        } else {
          y_ = null;
          yBuilder_ = null;
        }
        if (originBuilder_ == null) {
          origin_ = null;
        } else {
          origin_ = null;
          originBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return godot.wire.Wire.internal_static_Transform2D_descriptor;
      }

      @java.lang.Override
      public godot.wire.Wire.Transform2D getDefaultInstanceForType() {
        return godot.wire.Wire.Transform2D.getDefaultInstance();
      }

      @java.lang.Override
      public godot.wire.Wire.Transform2D build() {
        godot.wire.Wire.Transform2D result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public godot.wire.Wire.Transform2D buildPartial() {
        godot.wire.Wire.Transform2D result = new godot.wire.Wire.Transform2D(this);
        if (xBuilder_ == null) {
          result.x_ = x_;
        } else {
          result.x_ = xBuilder_.build();
        }
        if (yBuilder_ == null) {
          result.y_ = y_;
        } else {
          result.y_ = yBuilder_.build();
        }
        if (originBuilder_ == null) {
          result.origin_ = origin_;
        } else {
          result.origin_ = originBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof godot.wire.Wire.Transform2D) {
          return mergeFrom((godot.wire.Wire.Transform2D)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(godot.wire.Wire.Transform2D other) {
        if (other == godot.wire.Wire.Transform2D.getDefaultInstance()) return this;
        if (other.hasX()) {
          mergeX(other.getX());
        }
        if (other.hasY()) {
          mergeY(other.getY());
        }
        if (other.hasOrigin()) {
          mergeOrigin(other.getOrigin());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        godot.wire.Wire.Transform2D parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (godot.wire.Wire.Transform2D) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private godot.wire.Wire.Vector2 x_;
      private com.google.protobuf.SingleFieldBuilderV3<
          godot.wire.Wire.Vector2, godot.wire.Wire.Vector2.Builder, godot.wire.Wire.Vector2OrBuilder> xBuilder_;
      /**
       * <code>.Vector2 x = 1;</code>
       * @return Whether the x field is set.
       */
      public boolean hasX() {
        return xBuilder_ != null || x_ != null;
      }
      /**
       * <code>.Vector2 x = 1;</code>
       * @return The x.
       */
      public godot.wire.Wire.Vector2 getX() {
        if (xBuilder_ == null) {
          return x_ == null ? godot.wire.Wire.Vector2.getDefaultInstance() : x_;
        } else {
          return xBuilder_.getMessage();
        }
      }
      /**
       * <code>.Vector2 x = 1;</code>
       */
      public Builder setX(godot.wire.Wire.Vector2 value) {
        if (xBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          x_ = value;
          onChanged();
        } else {
          xBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.Vector2 x = 1;</code>
       */
      public Builder setX(
          godot.wire.Wire.Vector2.Builder builderForValue) {
        if (xBuilder_ == null) {
          x_ = builderForValue.build();
          onChanged();
        } else {
          xBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.Vector2 x = 1;</code>
       */
      public Builder mergeX(godot.wire.Wire.Vector2 value) {
        if (xBuilder_ == null) {
          if (x_ != null) {
            x_ =
              godot.wire.Wire.Vector2.newBuilder(x_).mergeFrom(value).buildPartial();
          } else {
            x_ = value;
          }
          onChanged();
        } else {
          xBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.Vector2 x = 1;</code>
       */
      public Builder clearX() {
        if (xBuilder_ == null) {
          x_ = null;
          onChanged();
        } else {
          x_ = null;
          xBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.Vector2 x = 1;</code>
       */
      public godot.wire.Wire.Vector2.Builder getXBuilder() {
        
        onChanged();
        return getXFieldBuilder().getBuilder();
      }
      /**
       * <code>.Vector2 x = 1;</code>
       */
      public godot.wire.Wire.Vector2OrBuilder getXOrBuilder() {
        if (xBuilder_ != null) {
          return xBuilder_.getMessageOrBuilder();
        } else {
          return x_ == null ?
              godot.wire.Wire.Vector2.getDefaultInstance() : x_;
        }
      }
      /**
       * <code>.Vector2 x = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          godot.wire.Wire.Vector2, godot.wire.Wire.Vector2.Builder, godot.wire.Wire.Vector2OrBuilder> 
          getXFieldBuilder() {
        if (xBuilder_ == null) {
          xBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              godot.wire.Wire.Vector2, godot.wire.Wire.Vector2.Builder, godot.wire.Wire.Vector2OrBuilder>(
                  getX(),
                  getParentForChildren(),
                  isClean());
          x_ = null;
        }
        return xBuilder_;
      }

      private godot.wire.Wire.Vector2 y_;
      private com.google.protobuf.SingleFieldBuilderV3<
          godot.wire.Wire.Vector2, godot.wire.Wire.Vector2.Builder, godot.wire.Wire.Vector2OrBuilder> yBuilder_;
      /**
       * <code>.Vector2 y = 2;</code>
       * @return Whether the y field is set.
       */
      public boolean hasY() {
        return yBuilder_ != null || y_ != null;
      }
      /**
       * <code>.Vector2 y = 2;</code>
       * @return The y.
       */
      public godot.wire.Wire.Vector2 getY() {
        if (yBuilder_ == null) {
          return y_ == null ? godot.wire.Wire.Vector2.getDefaultInstance() : y_;
        } else {
          return yBuilder_.getMessage();
        }
      }
      /**
       * <code>.Vector2 y = 2;</code>
       */
      public Builder setY(godot.wire.Wire.Vector2 value) {
        if (yBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          y_ = value;
          onChanged();
        } else {
          yBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.Vector2 y = 2;</code>
       */
      public Builder setY(
          godot.wire.Wire.Vector2.Builder builderForValue) {
        if (yBuilder_ == null) {
          y_ = builderForValue.build();
          onChanged();
        } else {
          yBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.Vector2 y = 2;</code>
       */
      public Builder mergeY(godot.wire.Wire.Vector2 value) {
        if (yBuilder_ == null) {
          if (y_ != null) {
            y_ =
              godot.wire.Wire.Vector2.newBuilder(y_).mergeFrom(value).buildPartial();
          } else {
            y_ = value;
          }
          onChanged();
        } else {
          yBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.Vector2 y = 2;</code>
       */
      public Builder clearY() {
        if (yBuilder_ == null) {
          y_ = null;
          onChanged();
        } else {
          y_ = null;
          yBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.Vector2 y = 2;</code>
       */
      public godot.wire.Wire.Vector2.Builder getYBuilder() {
        
        onChanged();
        return getYFieldBuilder().getBuilder();
      }
      /**
       * <code>.Vector2 y = 2;</code>
       */
      public godot.wire.Wire.Vector2OrBuilder getYOrBuilder() {
        if (yBuilder_ != null) {
          return yBuilder_.getMessageOrBuilder();
        } else {
          return y_ == null ?
              godot.wire.Wire.Vector2.getDefaultInstance() : y_;
        }
      }
      /**
       * <code>.Vector2 y = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          godot.wire.Wire.Vector2, godot.wire.Wire.Vector2.Builder, godot.wire.Wire.Vector2OrBuilder> 
          getYFieldBuilder() {
        if (yBuilder_ == null) {
          yBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              godot.wire.Wire.Vector2, godot.wire.Wire.Vector2.Builder, godot.wire.Wire.Vector2OrBuilder>(
                  getY(),
                  getParentForChildren(),
                  isClean());
          y_ = null;
        }
        return yBuilder_;
      }

      private godot.wire.Wire.Vector2 origin_;
      private com.google.protobuf.SingleFieldBuilderV3<
          godot.wire.Wire.Vector2, godot.wire.Wire.Vector2.Builder, godot.wire.Wire.Vector2OrBuilder> originBuilder_;
      /**
       * <code>.Vector2 origin = 3;</code>
       * @return Whether the origin field is set.
       */
      public boolean hasOrigin() {
        return originBuilder_ != null || origin_ != null;
      }
      /**
       * <code>.Vector2 origin = 3;</code>
       * @return The origin.
       */
      public godot.wire.Wire.Vector2 getOrigin() {
        if (originBuilder_ == null) {
          return origin_ == null ? godot.wire.Wire.Vector2.getDefaultInstance() : origin_;
        } else {
          return originBuilder_.getMessage();
        }
      }
      /**
       * <code>.Vector2 origin = 3;</code>
       */
      public Builder setOrigin(godot.wire.Wire.Vector2 value) {
        if (originBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          origin_ = value;
          onChanged();
        } else {
          originBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.Vector2 origin = 3;</code>
       */
      public Builder setOrigin(
          godot.wire.Wire.Vector2.Builder builderForValue) {
        if (originBuilder_ == null) {
          origin_ = builderForValue.build();
          onChanged();
        } else {
          originBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.Vector2 origin = 3;</code>
       */
      public Builder mergeOrigin(godot.wire.Wire.Vector2 value) {
        if (originBuilder_ == null) {
          if (origin_ != null) {
            origin_ =
              godot.wire.Wire.Vector2.newBuilder(origin_).mergeFrom(value).buildPartial();
          } else {
            origin_ = value;
          }
          onChanged();
        } else {
          originBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.Vector2 origin = 3;</code>
       */
      public Builder clearOrigin() {
        if (originBuilder_ == null) {
          origin_ = null;
          onChanged();
        } else {
          origin_ = null;
          originBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.Vector2 origin = 3;</code>
       */
      public godot.wire.Wire.Vector2.Builder getOriginBuilder() {
        
        onChanged();
        return getOriginFieldBuilder().getBuilder();
      }
      /**
       * <code>.Vector2 origin = 3;</code>
       */
      public godot.wire.Wire.Vector2OrBuilder getOriginOrBuilder() {
        if (originBuilder_ != null) {
          return originBuilder_.getMessageOrBuilder();
        } else {
          return origin_ == null ?
              godot.wire.Wire.Vector2.getDefaultInstance() : origin_;
        }
      }
      /**
       * <code>.Vector2 origin = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          godot.wire.Wire.Vector2, godot.wire.Wire.Vector2.Builder, godot.wire.Wire.Vector2OrBuilder> 
          getOriginFieldBuilder() {
        if (originBuilder_ == null) {
          originBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              godot.wire.Wire.Vector2, godot.wire.Wire.Vector2.Builder, godot.wire.Wire.Vector2OrBuilder>(
                  getOrigin(),
                  getParentForChildren(),
                  isClean());
          origin_ = null;
        }
        return originBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Transform2D)
    }

    // @@protoc_insertion_point(class_scope:Transform2D)
    private static final godot.wire.Wire.Transform2D DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new godot.wire.Wire.Transform2D();
    }

    public static godot.wire.Wire.Transform2D getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Transform2D>
        PARSER = new com.google.protobuf.AbstractParser<Transform2D>() {
      @java.lang.Override
      public Transform2D parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Transform2D(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Transform2D> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Transform2D> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public godot.wire.Wire.Transform2D getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PlaneOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Plane)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.Vector3 normal = 1;</code>
     * @return Whether the normal field is set.
     */
    boolean hasNormal();
    /**
     * <code>.Vector3 normal = 1;</code>
     * @return The normal.
     */
    godot.wire.Wire.Vector3 getNormal();
    /**
     * <code>.Vector3 normal = 1;</code>
     */
    godot.wire.Wire.Vector3OrBuilder getNormalOrBuilder();

    /**
     * <code>float d = 2;</code>
     * @return The d.
     */
    float getD();
  }
  /**
   * Protobuf type {@code Plane}
   */
  public static final class Plane extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Plane)
      PlaneOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Plane.newBuilder() to construct.
    private Plane(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Plane() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Plane();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Plane(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              godot.wire.Wire.Vector3.Builder subBuilder = null;
              if (normal_ != null) {
                subBuilder = normal_.toBuilder();
              }
              normal_ = input.readMessage(godot.wire.Wire.Vector3.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(normal_);
                normal_ = subBuilder.buildPartial();
              }

              break;
            }
            case 21: {

              d_ = input.readFloat();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return godot.wire.Wire.internal_static_Plane_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return godot.wire.Wire.internal_static_Plane_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              godot.wire.Wire.Plane.class, godot.wire.Wire.Plane.Builder.class);
    }

    public static final int NORMAL_FIELD_NUMBER = 1;
    private godot.wire.Wire.Vector3 normal_;
    /**
     * <code>.Vector3 normal = 1;</code>
     * @return Whether the normal field is set.
     */
    @java.lang.Override
    public boolean hasNormal() {
      return normal_ != null;
    }
    /**
     * <code>.Vector3 normal = 1;</code>
     * @return The normal.
     */
    @java.lang.Override
    public godot.wire.Wire.Vector3 getNormal() {
      return normal_ == null ? godot.wire.Wire.Vector3.getDefaultInstance() : normal_;
    }
    /**
     * <code>.Vector3 normal = 1;</code>
     */
    @java.lang.Override
    public godot.wire.Wire.Vector3OrBuilder getNormalOrBuilder() {
      return getNormal();
    }

    public static final int D_FIELD_NUMBER = 2;
    private float d_;
    /**
     * <code>float d = 2;</code>
     * @return The d.
     */
    @java.lang.Override
    public float getD() {
      return d_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (normal_ != null) {
        output.writeMessage(1, getNormal());
      }
      if (d_ != 0F) {
        output.writeFloat(2, d_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (normal_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getNormal());
      }
      if (d_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, d_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof godot.wire.Wire.Plane)) {
        return super.equals(obj);
      }
      godot.wire.Wire.Plane other = (godot.wire.Wire.Plane) obj;

      if (hasNormal() != other.hasNormal()) return false;
      if (hasNormal()) {
        if (!getNormal()
            .equals(other.getNormal())) return false;
      }
      if (java.lang.Float.floatToIntBits(getD())
          != java.lang.Float.floatToIntBits(
              other.getD())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasNormal()) {
        hash = (37 * hash) + NORMAL_FIELD_NUMBER;
        hash = (53 * hash) + getNormal().hashCode();
      }
      hash = (37 * hash) + D_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getD());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static godot.wire.Wire.Plane parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static godot.wire.Wire.Plane parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static godot.wire.Wire.Plane parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static godot.wire.Wire.Plane parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static godot.wire.Wire.Plane parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static godot.wire.Wire.Plane parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static godot.wire.Wire.Plane parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static godot.wire.Wire.Plane parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static godot.wire.Wire.Plane parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static godot.wire.Wire.Plane parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static godot.wire.Wire.Plane parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static godot.wire.Wire.Plane parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(godot.wire.Wire.Plane prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Plane}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Plane)
        godot.wire.Wire.PlaneOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return godot.wire.Wire.internal_static_Plane_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return godot.wire.Wire.internal_static_Plane_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                godot.wire.Wire.Plane.class, godot.wire.Wire.Plane.Builder.class);
      }

      // Construct using godot.wire.Wire.Plane.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (normalBuilder_ == null) {
          normal_ = null;
        } else {
          normal_ = null;
          normalBuilder_ = null;
        }
        d_ = 0F;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return godot.wire.Wire.internal_static_Plane_descriptor;
      }

      @java.lang.Override
      public godot.wire.Wire.Plane getDefaultInstanceForType() {
        return godot.wire.Wire.Plane.getDefaultInstance();
      }

      @java.lang.Override
      public godot.wire.Wire.Plane build() {
        godot.wire.Wire.Plane result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public godot.wire.Wire.Plane buildPartial() {
        godot.wire.Wire.Plane result = new godot.wire.Wire.Plane(this);
        if (normalBuilder_ == null) {
          result.normal_ = normal_;
        } else {
          result.normal_ = normalBuilder_.build();
        }
        result.d_ = d_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof godot.wire.Wire.Plane) {
          return mergeFrom((godot.wire.Wire.Plane)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(godot.wire.Wire.Plane other) {
        if (other == godot.wire.Wire.Plane.getDefaultInstance()) return this;
        if (other.hasNormal()) {
          mergeNormal(other.getNormal());
        }
        if (other.getD() != 0F) {
          setD(other.getD());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        godot.wire.Wire.Plane parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (godot.wire.Wire.Plane) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private godot.wire.Wire.Vector3 normal_;
      private com.google.protobuf.SingleFieldBuilderV3<
          godot.wire.Wire.Vector3, godot.wire.Wire.Vector3.Builder, godot.wire.Wire.Vector3OrBuilder> normalBuilder_;
      /**
       * <code>.Vector3 normal = 1;</code>
       * @return Whether the normal field is set.
       */
      public boolean hasNormal() {
        return normalBuilder_ != null || normal_ != null;
      }
      /**
       * <code>.Vector3 normal = 1;</code>
       * @return The normal.
       */
      public godot.wire.Wire.Vector3 getNormal() {
        if (normalBuilder_ == null) {
          return normal_ == null ? godot.wire.Wire.Vector3.getDefaultInstance() : normal_;
        } else {
          return normalBuilder_.getMessage();
        }
      }
      /**
       * <code>.Vector3 normal = 1;</code>
       */
      public Builder setNormal(godot.wire.Wire.Vector3 value) {
        if (normalBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          normal_ = value;
          onChanged();
        } else {
          normalBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.Vector3 normal = 1;</code>
       */
      public Builder setNormal(
          godot.wire.Wire.Vector3.Builder builderForValue) {
        if (normalBuilder_ == null) {
          normal_ = builderForValue.build();
          onChanged();
        } else {
          normalBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.Vector3 normal = 1;</code>
       */
      public Builder mergeNormal(godot.wire.Wire.Vector3 value) {
        if (normalBuilder_ == null) {
          if (normal_ != null) {
            normal_ =
              godot.wire.Wire.Vector3.newBuilder(normal_).mergeFrom(value).buildPartial();
          } else {
            normal_ = value;
          }
          onChanged();
        } else {
          normalBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.Vector3 normal = 1;</code>
       */
      public Builder clearNormal() {
        if (normalBuilder_ == null) {
          normal_ = null;
          onChanged();
        } else {
          normal_ = null;
          normalBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.Vector3 normal = 1;</code>
       */
      public godot.wire.Wire.Vector3.Builder getNormalBuilder() {
        
        onChanged();
        return getNormalFieldBuilder().getBuilder();
      }
      /**
       * <code>.Vector3 normal = 1;</code>
       */
      public godot.wire.Wire.Vector3OrBuilder getNormalOrBuilder() {
        if (normalBuilder_ != null) {
          return normalBuilder_.getMessageOrBuilder();
        } else {
          return normal_ == null ?
              godot.wire.Wire.Vector3.getDefaultInstance() : normal_;
        }
      }
      /**
       * <code>.Vector3 normal = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          godot.wire.Wire.Vector3, godot.wire.Wire.Vector3.Builder, godot.wire.Wire.Vector3OrBuilder> 
          getNormalFieldBuilder() {
        if (normalBuilder_ == null) {
          normalBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              godot.wire.Wire.Vector3, godot.wire.Wire.Vector3.Builder, godot.wire.Wire.Vector3OrBuilder>(
                  getNormal(),
                  getParentForChildren(),
                  isClean());
          normal_ = null;
        }
        return normalBuilder_;
      }

      private float d_ ;
      /**
       * <code>float d = 2;</code>
       * @return The d.
       */
      @java.lang.Override
      public float getD() {
        return d_;
      }
      /**
       * <code>float d = 2;</code>
       * @param value The d to set.
       * @return This builder for chaining.
       */
      public Builder setD(float value) {
        
        d_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float d = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearD() {
        
        d_ = 0F;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Plane)
    }

    // @@protoc_insertion_point(class_scope:Plane)
    private static final godot.wire.Wire.Plane DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new godot.wire.Wire.Plane();
    }

    public static godot.wire.Wire.Plane getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Plane>
        PARSER = new com.google.protobuf.AbstractParser<Plane>() {
      @java.lang.Override
      public Plane parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Plane(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Plane> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Plane> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public godot.wire.Wire.Plane getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface QuatOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Quat)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>float x = 1;</code>
     * @return The x.
     */
    float getX();

    /**
     * <code>float y = 2;</code>
     * @return The y.
     */
    float getY();

    /**
     * <code>float z = 3;</code>
     * @return The z.
     */
    float getZ();

    /**
     * <code>float w = 4;</code>
     * @return The w.
     */
    float getW();
  }
  /**
   * Protobuf type {@code Quat}
   */
  public static final class Quat extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Quat)
      QuatOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Quat.newBuilder() to construct.
    private Quat(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Quat() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Quat();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Quat(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 13: {

              x_ = input.readFloat();
              break;
            }
            case 21: {

              y_ = input.readFloat();
              break;
            }
            case 29: {

              z_ = input.readFloat();
              break;
            }
            case 37: {

              w_ = input.readFloat();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return godot.wire.Wire.internal_static_Quat_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return godot.wire.Wire.internal_static_Quat_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              godot.wire.Wire.Quat.class, godot.wire.Wire.Quat.Builder.class);
    }

    public static final int X_FIELD_NUMBER = 1;
    private float x_;
    /**
     * <code>float x = 1;</code>
     * @return The x.
     */
    @java.lang.Override
    public float getX() {
      return x_;
    }

    public static final int Y_FIELD_NUMBER = 2;
    private float y_;
    /**
     * <code>float y = 2;</code>
     * @return The y.
     */
    @java.lang.Override
    public float getY() {
      return y_;
    }

    public static final int Z_FIELD_NUMBER = 3;
    private float z_;
    /**
     * <code>float z = 3;</code>
     * @return The z.
     */
    @java.lang.Override
    public float getZ() {
      return z_;
    }

    public static final int W_FIELD_NUMBER = 4;
    private float w_;
    /**
     * <code>float w = 4;</code>
     * @return The w.
     */
    @java.lang.Override
    public float getW() {
      return w_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (x_ != 0F) {
        output.writeFloat(1, x_);
      }
      if (y_ != 0F) {
        output.writeFloat(2, y_);
      }
      if (z_ != 0F) {
        output.writeFloat(3, z_);
      }
      if (w_ != 0F) {
        output.writeFloat(4, w_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (x_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, x_);
      }
      if (y_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, y_);
      }
      if (z_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, z_);
      }
      if (w_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, w_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof godot.wire.Wire.Quat)) {
        return super.equals(obj);
      }
      godot.wire.Wire.Quat other = (godot.wire.Wire.Quat) obj;

      if (java.lang.Float.floatToIntBits(getX())
          != java.lang.Float.floatToIntBits(
              other.getX())) return false;
      if (java.lang.Float.floatToIntBits(getY())
          != java.lang.Float.floatToIntBits(
              other.getY())) return false;
      if (java.lang.Float.floatToIntBits(getZ())
          != java.lang.Float.floatToIntBits(
              other.getZ())) return false;
      if (java.lang.Float.floatToIntBits(getW())
          != java.lang.Float.floatToIntBits(
              other.getW())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + X_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getX());
      hash = (37 * hash) + Y_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getY());
      hash = (37 * hash) + Z_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getZ());
      hash = (37 * hash) + W_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getW());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static godot.wire.Wire.Quat parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static godot.wire.Wire.Quat parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static godot.wire.Wire.Quat parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static godot.wire.Wire.Quat parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static godot.wire.Wire.Quat parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static godot.wire.Wire.Quat parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static godot.wire.Wire.Quat parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static godot.wire.Wire.Quat parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static godot.wire.Wire.Quat parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static godot.wire.Wire.Quat parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static godot.wire.Wire.Quat parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static godot.wire.Wire.Quat parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(godot.wire.Wire.Quat prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Quat}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Quat)
        godot.wire.Wire.QuatOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return godot.wire.Wire.internal_static_Quat_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return godot.wire.Wire.internal_static_Quat_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                godot.wire.Wire.Quat.class, godot.wire.Wire.Quat.Builder.class);
      }

      // Construct using godot.wire.Wire.Quat.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        x_ = 0F;

        y_ = 0F;

        z_ = 0F;

        w_ = 0F;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return godot.wire.Wire.internal_static_Quat_descriptor;
      }

      @java.lang.Override
      public godot.wire.Wire.Quat getDefaultInstanceForType() {
        return godot.wire.Wire.Quat.getDefaultInstance();
      }

      @java.lang.Override
      public godot.wire.Wire.Quat build() {
        godot.wire.Wire.Quat result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public godot.wire.Wire.Quat buildPartial() {
        godot.wire.Wire.Quat result = new godot.wire.Wire.Quat(this);
        result.x_ = x_;
        result.y_ = y_;
        result.z_ = z_;
        result.w_ = w_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof godot.wire.Wire.Quat) {
          return mergeFrom((godot.wire.Wire.Quat)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(godot.wire.Wire.Quat other) {
        if (other == godot.wire.Wire.Quat.getDefaultInstance()) return this;
        if (other.getX() != 0F) {
          setX(other.getX());
        }
        if (other.getY() != 0F) {
          setY(other.getY());
        }
        if (other.getZ() != 0F) {
          setZ(other.getZ());
        }
        if (other.getW() != 0F) {
          setW(other.getW());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        godot.wire.Wire.Quat parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (godot.wire.Wire.Quat) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private float x_ ;
      /**
       * <code>float x = 1;</code>
       * @return The x.
       */
      @java.lang.Override
      public float getX() {
        return x_;
      }
      /**
       * <code>float x = 1;</code>
       * @param value The x to set.
       * @return This builder for chaining.
       */
      public Builder setX(float value) {
        
        x_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float x = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearX() {
        
        x_ = 0F;
        onChanged();
        return this;
      }

      private float y_ ;
      /**
       * <code>float y = 2;</code>
       * @return The y.
       */
      @java.lang.Override
      public float getY() {
        return y_;
      }
      /**
       * <code>float y = 2;</code>
       * @param value The y to set.
       * @return This builder for chaining.
       */
      public Builder setY(float value) {
        
        y_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float y = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearY() {
        
        y_ = 0F;
        onChanged();
        return this;
      }

      private float z_ ;
      /**
       * <code>float z = 3;</code>
       * @return The z.
       */
      @java.lang.Override
      public float getZ() {
        return z_;
      }
      /**
       * <code>float z = 3;</code>
       * @param value The z to set.
       * @return This builder for chaining.
       */
      public Builder setZ(float value) {
        
        z_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float z = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearZ() {
        
        z_ = 0F;
        onChanged();
        return this;
      }

      private float w_ ;
      /**
       * <code>float w = 4;</code>
       * @return The w.
       */
      @java.lang.Override
      public float getW() {
        return w_;
      }
      /**
       * <code>float w = 4;</code>
       * @param value The w to set.
       * @return This builder for chaining.
       */
      public Builder setW(float value) {
        
        w_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float w = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearW() {
        
        w_ = 0F;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Quat)
    }

    // @@protoc_insertion_point(class_scope:Quat)
    private static final godot.wire.Wire.Quat DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new godot.wire.Wire.Quat();
    }

    public static godot.wire.Wire.Quat getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Quat>
        PARSER = new com.google.protobuf.AbstractParser<Quat>() {
      @java.lang.Override
      public Quat parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Quat(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Quat> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Quat> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public godot.wire.Wire.Quat getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface AABBOrBuilder extends
      // @@protoc_insertion_point(interface_extends:AABB)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.Vector3 position = 1;</code>
     * @return Whether the position field is set.
     */
    boolean hasPosition();
    /**
     * <code>.Vector3 position = 1;</code>
     * @return The position.
     */
    godot.wire.Wire.Vector3 getPosition();
    /**
     * <code>.Vector3 position = 1;</code>
     */
    godot.wire.Wire.Vector3OrBuilder getPositionOrBuilder();

    /**
     * <code>.Vector3 size = 2;</code>
     * @return Whether the size field is set.
     */
    boolean hasSize();
    /**
     * <code>.Vector3 size = 2;</code>
     * @return The size.
     */
    godot.wire.Wire.Vector3 getSize();
    /**
     * <code>.Vector3 size = 2;</code>
     */
    godot.wire.Wire.Vector3OrBuilder getSizeOrBuilder();
  }
  /**
   * Protobuf type {@code AABB}
   */
  public static final class AABB extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:AABB)
      AABBOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use AABB.newBuilder() to construct.
    private AABB(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private AABB() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new AABB();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private AABB(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              godot.wire.Wire.Vector3.Builder subBuilder = null;
              if (position_ != null) {
                subBuilder = position_.toBuilder();
              }
              position_ = input.readMessage(godot.wire.Wire.Vector3.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(position_);
                position_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              godot.wire.Wire.Vector3.Builder subBuilder = null;
              if (size_ != null) {
                subBuilder = size_.toBuilder();
              }
              size_ = input.readMessage(godot.wire.Wire.Vector3.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(size_);
                size_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return godot.wire.Wire.internal_static_AABB_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return godot.wire.Wire.internal_static_AABB_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              godot.wire.Wire.AABB.class, godot.wire.Wire.AABB.Builder.class);
    }

    public static final int POSITION_FIELD_NUMBER = 1;
    private godot.wire.Wire.Vector3 position_;
    /**
     * <code>.Vector3 position = 1;</code>
     * @return Whether the position field is set.
     */
    @java.lang.Override
    public boolean hasPosition() {
      return position_ != null;
    }
    /**
     * <code>.Vector3 position = 1;</code>
     * @return The position.
     */
    @java.lang.Override
    public godot.wire.Wire.Vector3 getPosition() {
      return position_ == null ? godot.wire.Wire.Vector3.getDefaultInstance() : position_;
    }
    /**
     * <code>.Vector3 position = 1;</code>
     */
    @java.lang.Override
    public godot.wire.Wire.Vector3OrBuilder getPositionOrBuilder() {
      return getPosition();
    }

    public static final int SIZE_FIELD_NUMBER = 2;
    private godot.wire.Wire.Vector3 size_;
    /**
     * <code>.Vector3 size = 2;</code>
     * @return Whether the size field is set.
     */
    @java.lang.Override
    public boolean hasSize() {
      return size_ != null;
    }
    /**
     * <code>.Vector3 size = 2;</code>
     * @return The size.
     */
    @java.lang.Override
    public godot.wire.Wire.Vector3 getSize() {
      return size_ == null ? godot.wire.Wire.Vector3.getDefaultInstance() : size_;
    }
    /**
     * <code>.Vector3 size = 2;</code>
     */
    @java.lang.Override
    public godot.wire.Wire.Vector3OrBuilder getSizeOrBuilder() {
      return getSize();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (position_ != null) {
        output.writeMessage(1, getPosition());
      }
      if (size_ != null) {
        output.writeMessage(2, getSize());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (position_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getPosition());
      }
      if (size_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getSize());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof godot.wire.Wire.AABB)) {
        return super.equals(obj);
      }
      godot.wire.Wire.AABB other = (godot.wire.Wire.AABB) obj;

      if (hasPosition() != other.hasPosition()) return false;
      if (hasPosition()) {
        if (!getPosition()
            .equals(other.getPosition())) return false;
      }
      if (hasSize() != other.hasSize()) return false;
      if (hasSize()) {
        if (!getSize()
            .equals(other.getSize())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasPosition()) {
        hash = (37 * hash) + POSITION_FIELD_NUMBER;
        hash = (53 * hash) + getPosition().hashCode();
      }
      if (hasSize()) {
        hash = (37 * hash) + SIZE_FIELD_NUMBER;
        hash = (53 * hash) + getSize().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static godot.wire.Wire.AABB parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static godot.wire.Wire.AABB parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static godot.wire.Wire.AABB parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static godot.wire.Wire.AABB parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static godot.wire.Wire.AABB parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static godot.wire.Wire.AABB parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static godot.wire.Wire.AABB parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static godot.wire.Wire.AABB parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static godot.wire.Wire.AABB parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static godot.wire.Wire.AABB parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static godot.wire.Wire.AABB parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static godot.wire.Wire.AABB parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(godot.wire.Wire.AABB prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code AABB}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:AABB)
        godot.wire.Wire.AABBOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return godot.wire.Wire.internal_static_AABB_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return godot.wire.Wire.internal_static_AABB_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                godot.wire.Wire.AABB.class, godot.wire.Wire.AABB.Builder.class);
      }

      // Construct using godot.wire.Wire.AABB.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (positionBuilder_ == null) {
          position_ = null;
        } else {
          position_ = null;
          positionBuilder_ = null;
        }
        if (sizeBuilder_ == null) {
          size_ = null;
        } else {
          size_ = null;
          sizeBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return godot.wire.Wire.internal_static_AABB_descriptor;
      }

      @java.lang.Override
      public godot.wire.Wire.AABB getDefaultInstanceForType() {
        return godot.wire.Wire.AABB.getDefaultInstance();
      }

      @java.lang.Override
      public godot.wire.Wire.AABB build() {
        godot.wire.Wire.AABB result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public godot.wire.Wire.AABB buildPartial() {
        godot.wire.Wire.AABB result = new godot.wire.Wire.AABB(this);
        if (positionBuilder_ == null) {
          result.position_ = position_;
        } else {
          result.position_ = positionBuilder_.build();
        }
        if (sizeBuilder_ == null) {
          result.size_ = size_;
        } else {
          result.size_ = sizeBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof godot.wire.Wire.AABB) {
          return mergeFrom((godot.wire.Wire.AABB)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(godot.wire.Wire.AABB other) {
        if (other == godot.wire.Wire.AABB.getDefaultInstance()) return this;
        if (other.hasPosition()) {
          mergePosition(other.getPosition());
        }
        if (other.hasSize()) {
          mergeSize(other.getSize());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        godot.wire.Wire.AABB parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (godot.wire.Wire.AABB) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private godot.wire.Wire.Vector3 position_;
      private com.google.protobuf.SingleFieldBuilderV3<
          godot.wire.Wire.Vector3, godot.wire.Wire.Vector3.Builder, godot.wire.Wire.Vector3OrBuilder> positionBuilder_;
      /**
       * <code>.Vector3 position = 1;</code>
       * @return Whether the position field is set.
       */
      public boolean hasPosition() {
        return positionBuilder_ != null || position_ != null;
      }
      /**
       * <code>.Vector3 position = 1;</code>
       * @return The position.
       */
      public godot.wire.Wire.Vector3 getPosition() {
        if (positionBuilder_ == null) {
          return position_ == null ? godot.wire.Wire.Vector3.getDefaultInstance() : position_;
        } else {
          return positionBuilder_.getMessage();
        }
      }
      /**
       * <code>.Vector3 position = 1;</code>
       */
      public Builder setPosition(godot.wire.Wire.Vector3 value) {
        if (positionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          position_ = value;
          onChanged();
        } else {
          positionBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.Vector3 position = 1;</code>
       */
      public Builder setPosition(
          godot.wire.Wire.Vector3.Builder builderForValue) {
        if (positionBuilder_ == null) {
          position_ = builderForValue.build();
          onChanged();
        } else {
          positionBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.Vector3 position = 1;</code>
       */
      public Builder mergePosition(godot.wire.Wire.Vector3 value) {
        if (positionBuilder_ == null) {
          if (position_ != null) {
            position_ =
              godot.wire.Wire.Vector3.newBuilder(position_).mergeFrom(value).buildPartial();
          } else {
            position_ = value;
          }
          onChanged();
        } else {
          positionBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.Vector3 position = 1;</code>
       */
      public Builder clearPosition() {
        if (positionBuilder_ == null) {
          position_ = null;
          onChanged();
        } else {
          position_ = null;
          positionBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.Vector3 position = 1;</code>
       */
      public godot.wire.Wire.Vector3.Builder getPositionBuilder() {
        
        onChanged();
        return getPositionFieldBuilder().getBuilder();
      }
      /**
       * <code>.Vector3 position = 1;</code>
       */
      public godot.wire.Wire.Vector3OrBuilder getPositionOrBuilder() {
        if (positionBuilder_ != null) {
          return positionBuilder_.getMessageOrBuilder();
        } else {
          return position_ == null ?
              godot.wire.Wire.Vector3.getDefaultInstance() : position_;
        }
      }
      /**
       * <code>.Vector3 position = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          godot.wire.Wire.Vector3, godot.wire.Wire.Vector3.Builder, godot.wire.Wire.Vector3OrBuilder> 
          getPositionFieldBuilder() {
        if (positionBuilder_ == null) {
          positionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              godot.wire.Wire.Vector3, godot.wire.Wire.Vector3.Builder, godot.wire.Wire.Vector3OrBuilder>(
                  getPosition(),
                  getParentForChildren(),
                  isClean());
          position_ = null;
        }
        return positionBuilder_;
      }

      private godot.wire.Wire.Vector3 size_;
      private com.google.protobuf.SingleFieldBuilderV3<
          godot.wire.Wire.Vector3, godot.wire.Wire.Vector3.Builder, godot.wire.Wire.Vector3OrBuilder> sizeBuilder_;
      /**
       * <code>.Vector3 size = 2;</code>
       * @return Whether the size field is set.
       */
      public boolean hasSize() {
        return sizeBuilder_ != null || size_ != null;
      }
      /**
       * <code>.Vector3 size = 2;</code>
       * @return The size.
       */
      public godot.wire.Wire.Vector3 getSize() {
        if (sizeBuilder_ == null) {
          return size_ == null ? godot.wire.Wire.Vector3.getDefaultInstance() : size_;
        } else {
          return sizeBuilder_.getMessage();
        }
      }
      /**
       * <code>.Vector3 size = 2;</code>
       */
      public Builder setSize(godot.wire.Wire.Vector3 value) {
        if (sizeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          size_ = value;
          onChanged();
        } else {
          sizeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.Vector3 size = 2;</code>
       */
      public Builder setSize(
          godot.wire.Wire.Vector3.Builder builderForValue) {
        if (sizeBuilder_ == null) {
          size_ = builderForValue.build();
          onChanged();
        } else {
          sizeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.Vector3 size = 2;</code>
       */
      public Builder mergeSize(godot.wire.Wire.Vector3 value) {
        if (sizeBuilder_ == null) {
          if (size_ != null) {
            size_ =
              godot.wire.Wire.Vector3.newBuilder(size_).mergeFrom(value).buildPartial();
          } else {
            size_ = value;
          }
          onChanged();
        } else {
          sizeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.Vector3 size = 2;</code>
       */
      public Builder clearSize() {
        if (sizeBuilder_ == null) {
          size_ = null;
          onChanged();
        } else {
          size_ = null;
          sizeBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.Vector3 size = 2;</code>
       */
      public godot.wire.Wire.Vector3.Builder getSizeBuilder() {
        
        onChanged();
        return getSizeFieldBuilder().getBuilder();
      }
      /**
       * <code>.Vector3 size = 2;</code>
       */
      public godot.wire.Wire.Vector3OrBuilder getSizeOrBuilder() {
        if (sizeBuilder_ != null) {
          return sizeBuilder_.getMessageOrBuilder();
        } else {
          return size_ == null ?
              godot.wire.Wire.Vector3.getDefaultInstance() : size_;
        }
      }
      /**
       * <code>.Vector3 size = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          godot.wire.Wire.Vector3, godot.wire.Wire.Vector3.Builder, godot.wire.Wire.Vector3OrBuilder> 
          getSizeFieldBuilder() {
        if (sizeBuilder_ == null) {
          sizeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              godot.wire.Wire.Vector3, godot.wire.Wire.Vector3.Builder, godot.wire.Wire.Vector3OrBuilder>(
                  getSize(),
                  getParentForChildren(),
                  isClean());
          size_ = null;
        }
        return sizeBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:AABB)
    }

    // @@protoc_insertion_point(class_scope:AABB)
    private static final godot.wire.Wire.AABB DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new godot.wire.Wire.AABB();
    }

    public static godot.wire.Wire.AABB getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<AABB>
        PARSER = new com.google.protobuf.AbstractParser<AABB>() {
      @java.lang.Override
      public AABB parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new AABB(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<AABB> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<AABB> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public godot.wire.Wire.AABB getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface BasisOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Basis)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.Vector3 x = 1;</code>
     * @return Whether the x field is set.
     */
    boolean hasX();
    /**
     * <code>.Vector3 x = 1;</code>
     * @return The x.
     */
    godot.wire.Wire.Vector3 getX();
    /**
     * <code>.Vector3 x = 1;</code>
     */
    godot.wire.Wire.Vector3OrBuilder getXOrBuilder();

    /**
     * <code>.Vector3 y = 2;</code>
     * @return Whether the y field is set.
     */
    boolean hasY();
    /**
     * <code>.Vector3 y = 2;</code>
     * @return The y.
     */
    godot.wire.Wire.Vector3 getY();
    /**
     * <code>.Vector3 y = 2;</code>
     */
    godot.wire.Wire.Vector3OrBuilder getYOrBuilder();

    /**
     * <code>.Vector3 z = 3;</code>
     * @return Whether the z field is set.
     */
    boolean hasZ();
    /**
     * <code>.Vector3 z = 3;</code>
     * @return The z.
     */
    godot.wire.Wire.Vector3 getZ();
    /**
     * <code>.Vector3 z = 3;</code>
     */
    godot.wire.Wire.Vector3OrBuilder getZOrBuilder();
  }
  /**
   * Protobuf type {@code Basis}
   */
  public static final class Basis extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Basis)
      BasisOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Basis.newBuilder() to construct.
    private Basis(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Basis() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Basis();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Basis(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              godot.wire.Wire.Vector3.Builder subBuilder = null;
              if (x_ != null) {
                subBuilder = x_.toBuilder();
              }
              x_ = input.readMessage(godot.wire.Wire.Vector3.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(x_);
                x_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              godot.wire.Wire.Vector3.Builder subBuilder = null;
              if (y_ != null) {
                subBuilder = y_.toBuilder();
              }
              y_ = input.readMessage(godot.wire.Wire.Vector3.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(y_);
                y_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              godot.wire.Wire.Vector3.Builder subBuilder = null;
              if (z_ != null) {
                subBuilder = z_.toBuilder();
              }
              z_ = input.readMessage(godot.wire.Wire.Vector3.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(z_);
                z_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return godot.wire.Wire.internal_static_Basis_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return godot.wire.Wire.internal_static_Basis_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              godot.wire.Wire.Basis.class, godot.wire.Wire.Basis.Builder.class);
    }

    public static final int X_FIELD_NUMBER = 1;
    private godot.wire.Wire.Vector3 x_;
    /**
     * <code>.Vector3 x = 1;</code>
     * @return Whether the x field is set.
     */
    @java.lang.Override
    public boolean hasX() {
      return x_ != null;
    }
    /**
     * <code>.Vector3 x = 1;</code>
     * @return The x.
     */
    @java.lang.Override
    public godot.wire.Wire.Vector3 getX() {
      return x_ == null ? godot.wire.Wire.Vector3.getDefaultInstance() : x_;
    }
    /**
     * <code>.Vector3 x = 1;</code>
     */
    @java.lang.Override
    public godot.wire.Wire.Vector3OrBuilder getXOrBuilder() {
      return getX();
    }

    public static final int Y_FIELD_NUMBER = 2;
    private godot.wire.Wire.Vector3 y_;
    /**
     * <code>.Vector3 y = 2;</code>
     * @return Whether the y field is set.
     */
    @java.lang.Override
    public boolean hasY() {
      return y_ != null;
    }
    /**
     * <code>.Vector3 y = 2;</code>
     * @return The y.
     */
    @java.lang.Override
    public godot.wire.Wire.Vector3 getY() {
      return y_ == null ? godot.wire.Wire.Vector3.getDefaultInstance() : y_;
    }
    /**
     * <code>.Vector3 y = 2;</code>
     */
    @java.lang.Override
    public godot.wire.Wire.Vector3OrBuilder getYOrBuilder() {
      return getY();
    }

    public static final int Z_FIELD_NUMBER = 3;
    private godot.wire.Wire.Vector3 z_;
    /**
     * <code>.Vector3 z = 3;</code>
     * @return Whether the z field is set.
     */
    @java.lang.Override
    public boolean hasZ() {
      return z_ != null;
    }
    /**
     * <code>.Vector3 z = 3;</code>
     * @return The z.
     */
    @java.lang.Override
    public godot.wire.Wire.Vector3 getZ() {
      return z_ == null ? godot.wire.Wire.Vector3.getDefaultInstance() : z_;
    }
    /**
     * <code>.Vector3 z = 3;</code>
     */
    @java.lang.Override
    public godot.wire.Wire.Vector3OrBuilder getZOrBuilder() {
      return getZ();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (x_ != null) {
        output.writeMessage(1, getX());
      }
      if (y_ != null) {
        output.writeMessage(2, getY());
      }
      if (z_ != null) {
        output.writeMessage(3, getZ());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (x_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getX());
      }
      if (y_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getY());
      }
      if (z_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getZ());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof godot.wire.Wire.Basis)) {
        return super.equals(obj);
      }
      godot.wire.Wire.Basis other = (godot.wire.Wire.Basis) obj;

      if (hasX() != other.hasX()) return false;
      if (hasX()) {
        if (!getX()
            .equals(other.getX())) return false;
      }
      if (hasY() != other.hasY()) return false;
      if (hasY()) {
        if (!getY()
            .equals(other.getY())) return false;
      }
      if (hasZ() != other.hasZ()) return false;
      if (hasZ()) {
        if (!getZ()
            .equals(other.getZ())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasX()) {
        hash = (37 * hash) + X_FIELD_NUMBER;
        hash = (53 * hash) + getX().hashCode();
      }
      if (hasY()) {
        hash = (37 * hash) + Y_FIELD_NUMBER;
        hash = (53 * hash) + getY().hashCode();
      }
      if (hasZ()) {
        hash = (37 * hash) + Z_FIELD_NUMBER;
        hash = (53 * hash) + getZ().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static godot.wire.Wire.Basis parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static godot.wire.Wire.Basis parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static godot.wire.Wire.Basis parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static godot.wire.Wire.Basis parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static godot.wire.Wire.Basis parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static godot.wire.Wire.Basis parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static godot.wire.Wire.Basis parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static godot.wire.Wire.Basis parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static godot.wire.Wire.Basis parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static godot.wire.Wire.Basis parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static godot.wire.Wire.Basis parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static godot.wire.Wire.Basis parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(godot.wire.Wire.Basis prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Basis}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Basis)
        godot.wire.Wire.BasisOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return godot.wire.Wire.internal_static_Basis_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return godot.wire.Wire.internal_static_Basis_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                godot.wire.Wire.Basis.class, godot.wire.Wire.Basis.Builder.class);
      }

      // Construct using godot.wire.Wire.Basis.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (xBuilder_ == null) {
          x_ = null;
        } else {
          x_ = null;
          xBuilder_ = null;
        }
        if (yBuilder_ == null) {
          y_ = null;
        } else {
          y_ = null;
          yBuilder_ = null;
        }
        if (zBuilder_ == null) {
          z_ = null;
        } else {
          z_ = null;
          zBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return godot.wire.Wire.internal_static_Basis_descriptor;
      }

      @java.lang.Override
      public godot.wire.Wire.Basis getDefaultInstanceForType() {
        return godot.wire.Wire.Basis.getDefaultInstance();
      }

      @java.lang.Override
      public godot.wire.Wire.Basis build() {
        godot.wire.Wire.Basis result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public godot.wire.Wire.Basis buildPartial() {
        godot.wire.Wire.Basis result = new godot.wire.Wire.Basis(this);
        if (xBuilder_ == null) {
          result.x_ = x_;
        } else {
          result.x_ = xBuilder_.build();
        }
        if (yBuilder_ == null) {
          result.y_ = y_;
        } else {
          result.y_ = yBuilder_.build();
        }
        if (zBuilder_ == null) {
          result.z_ = z_;
        } else {
          result.z_ = zBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof godot.wire.Wire.Basis) {
          return mergeFrom((godot.wire.Wire.Basis)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(godot.wire.Wire.Basis other) {
        if (other == godot.wire.Wire.Basis.getDefaultInstance()) return this;
        if (other.hasX()) {
          mergeX(other.getX());
        }
        if (other.hasY()) {
          mergeY(other.getY());
        }
        if (other.hasZ()) {
          mergeZ(other.getZ());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        godot.wire.Wire.Basis parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (godot.wire.Wire.Basis) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private godot.wire.Wire.Vector3 x_;
      private com.google.protobuf.SingleFieldBuilderV3<
          godot.wire.Wire.Vector3, godot.wire.Wire.Vector3.Builder, godot.wire.Wire.Vector3OrBuilder> xBuilder_;
      /**
       * <code>.Vector3 x = 1;</code>
       * @return Whether the x field is set.
       */
      public boolean hasX() {
        return xBuilder_ != null || x_ != null;
      }
      /**
       * <code>.Vector3 x = 1;</code>
       * @return The x.
       */
      public godot.wire.Wire.Vector3 getX() {
        if (xBuilder_ == null) {
          return x_ == null ? godot.wire.Wire.Vector3.getDefaultInstance() : x_;
        } else {
          return xBuilder_.getMessage();
        }
      }
      /**
       * <code>.Vector3 x = 1;</code>
       */
      public Builder setX(godot.wire.Wire.Vector3 value) {
        if (xBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          x_ = value;
          onChanged();
        } else {
          xBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.Vector3 x = 1;</code>
       */
      public Builder setX(
          godot.wire.Wire.Vector3.Builder builderForValue) {
        if (xBuilder_ == null) {
          x_ = builderForValue.build();
          onChanged();
        } else {
          xBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.Vector3 x = 1;</code>
       */
      public Builder mergeX(godot.wire.Wire.Vector3 value) {
        if (xBuilder_ == null) {
          if (x_ != null) {
            x_ =
              godot.wire.Wire.Vector3.newBuilder(x_).mergeFrom(value).buildPartial();
          } else {
            x_ = value;
          }
          onChanged();
        } else {
          xBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.Vector3 x = 1;</code>
       */
      public Builder clearX() {
        if (xBuilder_ == null) {
          x_ = null;
          onChanged();
        } else {
          x_ = null;
          xBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.Vector3 x = 1;</code>
       */
      public godot.wire.Wire.Vector3.Builder getXBuilder() {
        
        onChanged();
        return getXFieldBuilder().getBuilder();
      }
      /**
       * <code>.Vector3 x = 1;</code>
       */
      public godot.wire.Wire.Vector3OrBuilder getXOrBuilder() {
        if (xBuilder_ != null) {
          return xBuilder_.getMessageOrBuilder();
        } else {
          return x_ == null ?
              godot.wire.Wire.Vector3.getDefaultInstance() : x_;
        }
      }
      /**
       * <code>.Vector3 x = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          godot.wire.Wire.Vector3, godot.wire.Wire.Vector3.Builder, godot.wire.Wire.Vector3OrBuilder> 
          getXFieldBuilder() {
        if (xBuilder_ == null) {
          xBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              godot.wire.Wire.Vector3, godot.wire.Wire.Vector3.Builder, godot.wire.Wire.Vector3OrBuilder>(
                  getX(),
                  getParentForChildren(),
                  isClean());
          x_ = null;
        }
        return xBuilder_;
      }

      private godot.wire.Wire.Vector3 y_;
      private com.google.protobuf.SingleFieldBuilderV3<
          godot.wire.Wire.Vector3, godot.wire.Wire.Vector3.Builder, godot.wire.Wire.Vector3OrBuilder> yBuilder_;
      /**
       * <code>.Vector3 y = 2;</code>
       * @return Whether the y field is set.
       */
      public boolean hasY() {
        return yBuilder_ != null || y_ != null;
      }
      /**
       * <code>.Vector3 y = 2;</code>
       * @return The y.
       */
      public godot.wire.Wire.Vector3 getY() {
        if (yBuilder_ == null) {
          return y_ == null ? godot.wire.Wire.Vector3.getDefaultInstance() : y_;
        } else {
          return yBuilder_.getMessage();
        }
      }
      /**
       * <code>.Vector3 y = 2;</code>
       */
      public Builder setY(godot.wire.Wire.Vector3 value) {
        if (yBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          y_ = value;
          onChanged();
        } else {
          yBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.Vector3 y = 2;</code>
       */
      public Builder setY(
          godot.wire.Wire.Vector3.Builder builderForValue) {
        if (yBuilder_ == null) {
          y_ = builderForValue.build();
          onChanged();
        } else {
          yBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.Vector3 y = 2;</code>
       */
      public Builder mergeY(godot.wire.Wire.Vector3 value) {
        if (yBuilder_ == null) {
          if (y_ != null) {
            y_ =
              godot.wire.Wire.Vector3.newBuilder(y_).mergeFrom(value).buildPartial();
          } else {
            y_ = value;
          }
          onChanged();
        } else {
          yBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.Vector3 y = 2;</code>
       */
      public Builder clearY() {
        if (yBuilder_ == null) {
          y_ = null;
          onChanged();
        } else {
          y_ = null;
          yBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.Vector3 y = 2;</code>
       */
      public godot.wire.Wire.Vector3.Builder getYBuilder() {
        
        onChanged();
        return getYFieldBuilder().getBuilder();
      }
      /**
       * <code>.Vector3 y = 2;</code>
       */
      public godot.wire.Wire.Vector3OrBuilder getYOrBuilder() {
        if (yBuilder_ != null) {
          return yBuilder_.getMessageOrBuilder();
        } else {
          return y_ == null ?
              godot.wire.Wire.Vector3.getDefaultInstance() : y_;
        }
      }
      /**
       * <code>.Vector3 y = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          godot.wire.Wire.Vector3, godot.wire.Wire.Vector3.Builder, godot.wire.Wire.Vector3OrBuilder> 
          getYFieldBuilder() {
        if (yBuilder_ == null) {
          yBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              godot.wire.Wire.Vector3, godot.wire.Wire.Vector3.Builder, godot.wire.Wire.Vector3OrBuilder>(
                  getY(),
                  getParentForChildren(),
                  isClean());
          y_ = null;
        }
        return yBuilder_;
      }

      private godot.wire.Wire.Vector3 z_;
      private com.google.protobuf.SingleFieldBuilderV3<
          godot.wire.Wire.Vector3, godot.wire.Wire.Vector3.Builder, godot.wire.Wire.Vector3OrBuilder> zBuilder_;
      /**
       * <code>.Vector3 z = 3;</code>
       * @return Whether the z field is set.
       */
      public boolean hasZ() {
        return zBuilder_ != null || z_ != null;
      }
      /**
       * <code>.Vector3 z = 3;</code>
       * @return The z.
       */
      public godot.wire.Wire.Vector3 getZ() {
        if (zBuilder_ == null) {
          return z_ == null ? godot.wire.Wire.Vector3.getDefaultInstance() : z_;
        } else {
          return zBuilder_.getMessage();
        }
      }
      /**
       * <code>.Vector3 z = 3;</code>
       */
      public Builder setZ(godot.wire.Wire.Vector3 value) {
        if (zBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          z_ = value;
          onChanged();
        } else {
          zBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.Vector3 z = 3;</code>
       */
      public Builder setZ(
          godot.wire.Wire.Vector3.Builder builderForValue) {
        if (zBuilder_ == null) {
          z_ = builderForValue.build();
          onChanged();
        } else {
          zBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.Vector3 z = 3;</code>
       */
      public Builder mergeZ(godot.wire.Wire.Vector3 value) {
        if (zBuilder_ == null) {
          if (z_ != null) {
            z_ =
              godot.wire.Wire.Vector3.newBuilder(z_).mergeFrom(value).buildPartial();
          } else {
            z_ = value;
          }
          onChanged();
        } else {
          zBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.Vector3 z = 3;</code>
       */
      public Builder clearZ() {
        if (zBuilder_ == null) {
          z_ = null;
          onChanged();
        } else {
          z_ = null;
          zBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.Vector3 z = 3;</code>
       */
      public godot.wire.Wire.Vector3.Builder getZBuilder() {
        
        onChanged();
        return getZFieldBuilder().getBuilder();
      }
      /**
       * <code>.Vector3 z = 3;</code>
       */
      public godot.wire.Wire.Vector3OrBuilder getZOrBuilder() {
        if (zBuilder_ != null) {
          return zBuilder_.getMessageOrBuilder();
        } else {
          return z_ == null ?
              godot.wire.Wire.Vector3.getDefaultInstance() : z_;
        }
      }
      /**
       * <code>.Vector3 z = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          godot.wire.Wire.Vector3, godot.wire.Wire.Vector3.Builder, godot.wire.Wire.Vector3OrBuilder> 
          getZFieldBuilder() {
        if (zBuilder_ == null) {
          zBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              godot.wire.Wire.Vector3, godot.wire.Wire.Vector3.Builder, godot.wire.Wire.Vector3OrBuilder>(
                  getZ(),
                  getParentForChildren(),
                  isClean());
          z_ = null;
        }
        return zBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Basis)
    }

    // @@protoc_insertion_point(class_scope:Basis)
    private static final godot.wire.Wire.Basis DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new godot.wire.Wire.Basis();
    }

    public static godot.wire.Wire.Basis getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Basis>
        PARSER = new com.google.protobuf.AbstractParser<Basis>() {
      @java.lang.Override
      public Basis parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Basis(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Basis> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Basis> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public godot.wire.Wire.Basis getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TransformOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Transform)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.Basis basis = 1;</code>
     * @return Whether the basis field is set.
     */
    boolean hasBasis();
    /**
     * <code>.Basis basis = 1;</code>
     * @return The basis.
     */
    godot.wire.Wire.Basis getBasis();
    /**
     * <code>.Basis basis = 1;</code>
     */
    godot.wire.Wire.BasisOrBuilder getBasisOrBuilder();

    /**
     * <code>.Vector3 origin = 2;</code>
     * @return Whether the origin field is set.
     */
    boolean hasOrigin();
    /**
     * <code>.Vector3 origin = 2;</code>
     * @return The origin.
     */
    godot.wire.Wire.Vector3 getOrigin();
    /**
     * <code>.Vector3 origin = 2;</code>
     */
    godot.wire.Wire.Vector3OrBuilder getOriginOrBuilder();
  }
  /**
   * Protobuf type {@code Transform}
   */
  public static final class Transform extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Transform)
      TransformOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Transform.newBuilder() to construct.
    private Transform(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Transform() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Transform();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Transform(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              godot.wire.Wire.Basis.Builder subBuilder = null;
              if (basis_ != null) {
                subBuilder = basis_.toBuilder();
              }
              basis_ = input.readMessage(godot.wire.Wire.Basis.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(basis_);
                basis_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              godot.wire.Wire.Vector3.Builder subBuilder = null;
              if (origin_ != null) {
                subBuilder = origin_.toBuilder();
              }
              origin_ = input.readMessage(godot.wire.Wire.Vector3.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(origin_);
                origin_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return godot.wire.Wire.internal_static_Transform_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return godot.wire.Wire.internal_static_Transform_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              godot.wire.Wire.Transform.class, godot.wire.Wire.Transform.Builder.class);
    }

    public static final int BASIS_FIELD_NUMBER = 1;
    private godot.wire.Wire.Basis basis_;
    /**
     * <code>.Basis basis = 1;</code>
     * @return Whether the basis field is set.
     */
    @java.lang.Override
    public boolean hasBasis() {
      return basis_ != null;
    }
    /**
     * <code>.Basis basis = 1;</code>
     * @return The basis.
     */
    @java.lang.Override
    public godot.wire.Wire.Basis getBasis() {
      return basis_ == null ? godot.wire.Wire.Basis.getDefaultInstance() : basis_;
    }
    /**
     * <code>.Basis basis = 1;</code>
     */
    @java.lang.Override
    public godot.wire.Wire.BasisOrBuilder getBasisOrBuilder() {
      return getBasis();
    }

    public static final int ORIGIN_FIELD_NUMBER = 2;
    private godot.wire.Wire.Vector3 origin_;
    /**
     * <code>.Vector3 origin = 2;</code>
     * @return Whether the origin field is set.
     */
    @java.lang.Override
    public boolean hasOrigin() {
      return origin_ != null;
    }
    /**
     * <code>.Vector3 origin = 2;</code>
     * @return The origin.
     */
    @java.lang.Override
    public godot.wire.Wire.Vector3 getOrigin() {
      return origin_ == null ? godot.wire.Wire.Vector3.getDefaultInstance() : origin_;
    }
    /**
     * <code>.Vector3 origin = 2;</code>
     */
    @java.lang.Override
    public godot.wire.Wire.Vector3OrBuilder getOriginOrBuilder() {
      return getOrigin();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (basis_ != null) {
        output.writeMessage(1, getBasis());
      }
      if (origin_ != null) {
        output.writeMessage(2, getOrigin());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (basis_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getBasis());
      }
      if (origin_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getOrigin());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof godot.wire.Wire.Transform)) {
        return super.equals(obj);
      }
      godot.wire.Wire.Transform other = (godot.wire.Wire.Transform) obj;

      if (hasBasis() != other.hasBasis()) return false;
      if (hasBasis()) {
        if (!getBasis()
            .equals(other.getBasis())) return false;
      }
      if (hasOrigin() != other.hasOrigin()) return false;
      if (hasOrigin()) {
        if (!getOrigin()
            .equals(other.getOrigin())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasBasis()) {
        hash = (37 * hash) + BASIS_FIELD_NUMBER;
        hash = (53 * hash) + getBasis().hashCode();
      }
      if (hasOrigin()) {
        hash = (37 * hash) + ORIGIN_FIELD_NUMBER;
        hash = (53 * hash) + getOrigin().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static godot.wire.Wire.Transform parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static godot.wire.Wire.Transform parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static godot.wire.Wire.Transform parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static godot.wire.Wire.Transform parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static godot.wire.Wire.Transform parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static godot.wire.Wire.Transform parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static godot.wire.Wire.Transform parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static godot.wire.Wire.Transform parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static godot.wire.Wire.Transform parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static godot.wire.Wire.Transform parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static godot.wire.Wire.Transform parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static godot.wire.Wire.Transform parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(godot.wire.Wire.Transform prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Transform}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Transform)
        godot.wire.Wire.TransformOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return godot.wire.Wire.internal_static_Transform_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return godot.wire.Wire.internal_static_Transform_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                godot.wire.Wire.Transform.class, godot.wire.Wire.Transform.Builder.class);
      }

      // Construct using godot.wire.Wire.Transform.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (basisBuilder_ == null) {
          basis_ = null;
        } else {
          basis_ = null;
          basisBuilder_ = null;
        }
        if (originBuilder_ == null) {
          origin_ = null;
        } else {
          origin_ = null;
          originBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return godot.wire.Wire.internal_static_Transform_descriptor;
      }

      @java.lang.Override
      public godot.wire.Wire.Transform getDefaultInstanceForType() {
        return godot.wire.Wire.Transform.getDefaultInstance();
      }

      @java.lang.Override
      public godot.wire.Wire.Transform build() {
        godot.wire.Wire.Transform result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public godot.wire.Wire.Transform buildPartial() {
        godot.wire.Wire.Transform result = new godot.wire.Wire.Transform(this);
        if (basisBuilder_ == null) {
          result.basis_ = basis_;
        } else {
          result.basis_ = basisBuilder_.build();
        }
        if (originBuilder_ == null) {
          result.origin_ = origin_;
        } else {
          result.origin_ = originBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof godot.wire.Wire.Transform) {
          return mergeFrom((godot.wire.Wire.Transform)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(godot.wire.Wire.Transform other) {
        if (other == godot.wire.Wire.Transform.getDefaultInstance()) return this;
        if (other.hasBasis()) {
          mergeBasis(other.getBasis());
        }
        if (other.hasOrigin()) {
          mergeOrigin(other.getOrigin());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        godot.wire.Wire.Transform parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (godot.wire.Wire.Transform) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private godot.wire.Wire.Basis basis_;
      private com.google.protobuf.SingleFieldBuilderV3<
          godot.wire.Wire.Basis, godot.wire.Wire.Basis.Builder, godot.wire.Wire.BasisOrBuilder> basisBuilder_;
      /**
       * <code>.Basis basis = 1;</code>
       * @return Whether the basis field is set.
       */
      public boolean hasBasis() {
        return basisBuilder_ != null || basis_ != null;
      }
      /**
       * <code>.Basis basis = 1;</code>
       * @return The basis.
       */
      public godot.wire.Wire.Basis getBasis() {
        if (basisBuilder_ == null) {
          return basis_ == null ? godot.wire.Wire.Basis.getDefaultInstance() : basis_;
        } else {
          return basisBuilder_.getMessage();
        }
      }
      /**
       * <code>.Basis basis = 1;</code>
       */
      public Builder setBasis(godot.wire.Wire.Basis value) {
        if (basisBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          basis_ = value;
          onChanged();
        } else {
          basisBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.Basis basis = 1;</code>
       */
      public Builder setBasis(
          godot.wire.Wire.Basis.Builder builderForValue) {
        if (basisBuilder_ == null) {
          basis_ = builderForValue.build();
          onChanged();
        } else {
          basisBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.Basis basis = 1;</code>
       */
      public Builder mergeBasis(godot.wire.Wire.Basis value) {
        if (basisBuilder_ == null) {
          if (basis_ != null) {
            basis_ =
              godot.wire.Wire.Basis.newBuilder(basis_).mergeFrom(value).buildPartial();
          } else {
            basis_ = value;
          }
          onChanged();
        } else {
          basisBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.Basis basis = 1;</code>
       */
      public Builder clearBasis() {
        if (basisBuilder_ == null) {
          basis_ = null;
          onChanged();
        } else {
          basis_ = null;
          basisBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.Basis basis = 1;</code>
       */
      public godot.wire.Wire.Basis.Builder getBasisBuilder() {
        
        onChanged();
        return getBasisFieldBuilder().getBuilder();
      }
      /**
       * <code>.Basis basis = 1;</code>
       */
      public godot.wire.Wire.BasisOrBuilder getBasisOrBuilder() {
        if (basisBuilder_ != null) {
          return basisBuilder_.getMessageOrBuilder();
        } else {
          return basis_ == null ?
              godot.wire.Wire.Basis.getDefaultInstance() : basis_;
        }
      }
      /**
       * <code>.Basis basis = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          godot.wire.Wire.Basis, godot.wire.Wire.Basis.Builder, godot.wire.Wire.BasisOrBuilder> 
          getBasisFieldBuilder() {
        if (basisBuilder_ == null) {
          basisBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              godot.wire.Wire.Basis, godot.wire.Wire.Basis.Builder, godot.wire.Wire.BasisOrBuilder>(
                  getBasis(),
                  getParentForChildren(),
                  isClean());
          basis_ = null;
        }
        return basisBuilder_;
      }

      private godot.wire.Wire.Vector3 origin_;
      private com.google.protobuf.SingleFieldBuilderV3<
          godot.wire.Wire.Vector3, godot.wire.Wire.Vector3.Builder, godot.wire.Wire.Vector3OrBuilder> originBuilder_;
      /**
       * <code>.Vector3 origin = 2;</code>
       * @return Whether the origin field is set.
       */
      public boolean hasOrigin() {
        return originBuilder_ != null || origin_ != null;
      }
      /**
       * <code>.Vector3 origin = 2;</code>
       * @return The origin.
       */
      public godot.wire.Wire.Vector3 getOrigin() {
        if (originBuilder_ == null) {
          return origin_ == null ? godot.wire.Wire.Vector3.getDefaultInstance() : origin_;
        } else {
          return originBuilder_.getMessage();
        }
      }
      /**
       * <code>.Vector3 origin = 2;</code>
       */
      public Builder setOrigin(godot.wire.Wire.Vector3 value) {
        if (originBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          origin_ = value;
          onChanged();
        } else {
          originBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.Vector3 origin = 2;</code>
       */
      public Builder setOrigin(
          godot.wire.Wire.Vector3.Builder builderForValue) {
        if (originBuilder_ == null) {
          origin_ = builderForValue.build();
          onChanged();
        } else {
          originBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.Vector3 origin = 2;</code>
       */
      public Builder mergeOrigin(godot.wire.Wire.Vector3 value) {
        if (originBuilder_ == null) {
          if (origin_ != null) {
            origin_ =
              godot.wire.Wire.Vector3.newBuilder(origin_).mergeFrom(value).buildPartial();
          } else {
            origin_ = value;
          }
          onChanged();
        } else {
          originBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.Vector3 origin = 2;</code>
       */
      public Builder clearOrigin() {
        if (originBuilder_ == null) {
          origin_ = null;
          onChanged();
        } else {
          origin_ = null;
          originBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.Vector3 origin = 2;</code>
       */
      public godot.wire.Wire.Vector3.Builder getOriginBuilder() {
        
        onChanged();
        return getOriginFieldBuilder().getBuilder();
      }
      /**
       * <code>.Vector3 origin = 2;</code>
       */
      public godot.wire.Wire.Vector3OrBuilder getOriginOrBuilder() {
        if (originBuilder_ != null) {
          return originBuilder_.getMessageOrBuilder();
        } else {
          return origin_ == null ?
              godot.wire.Wire.Vector3.getDefaultInstance() : origin_;
        }
      }
      /**
       * <code>.Vector3 origin = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          godot.wire.Wire.Vector3, godot.wire.Wire.Vector3.Builder, godot.wire.Wire.Vector3OrBuilder> 
          getOriginFieldBuilder() {
        if (originBuilder_ == null) {
          originBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              godot.wire.Wire.Vector3, godot.wire.Wire.Vector3.Builder, godot.wire.Wire.Vector3OrBuilder>(
                  getOrigin(),
                  getParentForChildren(),
                  isClean());
          origin_ = null;
        }
        return originBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Transform)
    }

    // @@protoc_insertion_point(class_scope:Transform)
    private static final godot.wire.Wire.Transform DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new godot.wire.Wire.Transform();
    }

    public static godot.wire.Wire.Transform getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Transform>
        PARSER = new com.google.protobuf.AbstractParser<Transform>() {
      @java.lang.Override
      public Transform parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Transform(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Transform> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Transform> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public godot.wire.Wire.Transform getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface KVariantOrBuilder extends
      // @@protoc_insertion_point(interface_extends:KVariant)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 nil_value = 1;</code>
     * @return The nilValue.
     */
    int getNilValue();

    /**
     * <code>bool bool_value = 2;</code>
     * @return The boolValue.
     */
    boolean getBoolValue();

    /**
     * <code>int64 long_value = 3;</code>
     * @return The longValue.
     */
    long getLongValue();

    /**
     * <code>double real_value = 4;</code>
     * @return The realValue.
     */
    double getRealValue();

    /**
     * <code>string string_value = 5;</code>
     * @return The stringValue.
     */
    java.lang.String getStringValue();
    /**
     * <code>string string_value = 5;</code>
     * @return The bytes for stringValue.
     */
    com.google.protobuf.ByteString
        getStringValueBytes();

    /**
     * <code>.Vector2 vector2_value = 6;</code>
     * @return Whether the vector2Value field is set.
     */
    boolean hasVector2Value();
    /**
     * <code>.Vector2 vector2_value = 6;</code>
     * @return The vector2Value.
     */
    godot.wire.Wire.Vector2 getVector2Value();
    /**
     * <code>.Vector2 vector2_value = 6;</code>
     */
    godot.wire.Wire.Vector2OrBuilder getVector2ValueOrBuilder();

    /**
     * <code>.Rect2 rect2_value = 7;</code>
     * @return Whether the rect2Value field is set.
     */
    boolean hasRect2Value();
    /**
     * <code>.Rect2 rect2_value = 7;</code>
     * @return The rect2Value.
     */
    godot.wire.Wire.Rect2 getRect2Value();
    /**
     * <code>.Rect2 rect2_value = 7;</code>
     */
    godot.wire.Wire.Rect2OrBuilder getRect2ValueOrBuilder();

    /**
     * <code>.Vector3 vector3_value = 8;</code>
     * @return Whether the vector3Value field is set.
     */
    boolean hasVector3Value();
    /**
     * <code>.Vector3 vector3_value = 8;</code>
     * @return The vector3Value.
     */
    godot.wire.Wire.Vector3 getVector3Value();
    /**
     * <code>.Vector3 vector3_value = 8;</code>
     */
    godot.wire.Wire.Vector3OrBuilder getVector3ValueOrBuilder();

    /**
     * <code>.Transform2D transform2D_value = 9;</code>
     * @return Whether the transform2DValue field is set.
     */
    boolean hasTransform2DValue();
    /**
     * <code>.Transform2D transform2D_value = 9;</code>
     * @return The transform2DValue.
     */
    godot.wire.Wire.Transform2D getTransform2DValue();
    /**
     * <code>.Transform2D transform2D_value = 9;</code>
     */
    godot.wire.Wire.Transform2DOrBuilder getTransform2DValueOrBuilder();

    /**
     * <code>.Plane plane_value = 10;</code>
     * @return Whether the planeValue field is set.
     */
    boolean hasPlaneValue();
    /**
     * <code>.Plane plane_value = 10;</code>
     * @return The planeValue.
     */
    godot.wire.Wire.Plane getPlaneValue();
    /**
     * <code>.Plane plane_value = 10;</code>
     */
    godot.wire.Wire.PlaneOrBuilder getPlaneValueOrBuilder();

    /**
     * <code>.Quat quat_value = 11;</code>
     * @return Whether the quatValue field is set.
     */
    boolean hasQuatValue();
    /**
     * <code>.Quat quat_value = 11;</code>
     * @return The quatValue.
     */
    godot.wire.Wire.Quat getQuatValue();
    /**
     * <code>.Quat quat_value = 11;</code>
     */
    godot.wire.Wire.QuatOrBuilder getQuatValueOrBuilder();

    /**
     * <code>.AABB aabb_value = 12;</code>
     * @return Whether the aabbValue field is set.
     */
    boolean hasAabbValue();
    /**
     * <code>.AABB aabb_value = 12;</code>
     * @return The aabbValue.
     */
    godot.wire.Wire.AABB getAabbValue();
    /**
     * <code>.AABB aabb_value = 12;</code>
     */
    godot.wire.Wire.AABBOrBuilder getAabbValueOrBuilder();

    /**
     * <code>.Basis basis_value = 13;</code>
     * @return Whether the basisValue field is set.
     */
    boolean hasBasisValue();
    /**
     * <code>.Basis basis_value = 13;</code>
     * @return The basisValue.
     */
    godot.wire.Wire.Basis getBasisValue();
    /**
     * <code>.Basis basis_value = 13;</code>
     */
    godot.wire.Wire.BasisOrBuilder getBasisValueOrBuilder();

    /**
     * <code>.Transform transform_value = 14;</code>
     * @return Whether the transformValue field is set.
     */
    boolean hasTransformValue();
    /**
     * <code>.Transform transform_value = 14;</code>
     * @return The transformValue.
     */
    godot.wire.Wire.Transform getTransformValue();
    /**
     * <code>.Transform transform_value = 14;</code>
     */
    godot.wire.Wire.TransformOrBuilder getTransformValueOrBuilder();

    public godot.wire.Wire.KVariant.TypeCase getTypeCase();
  }
  /**
   * Protobuf type {@code KVariant}
   */
  public static final class KVariant extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:KVariant)
      KVariantOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use KVariant.newBuilder() to construct.
    private KVariant(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private KVariant() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new KVariant();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private KVariant(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              typeCase_ = 1;
              type_ = input.readInt32();
              break;
            }
            case 16: {
              typeCase_ = 2;
              type_ = input.readBool();
              break;
            }
            case 24: {
              typeCase_ = 3;
              type_ = input.readInt64();
              break;
            }
            case 33: {
              typeCase_ = 4;
              type_ = input.readDouble();
              break;
            }
            case 42: {
              java.lang.String s = input.readStringRequireUtf8();
              typeCase_ = 5;
              type_ = s;
              break;
            }
            case 50: {
              godot.wire.Wire.Vector2.Builder subBuilder = null;
              if (typeCase_ == 6) {
                subBuilder = ((godot.wire.Wire.Vector2) type_).toBuilder();
              }
              type_ =
                  input.readMessage(godot.wire.Wire.Vector2.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((godot.wire.Wire.Vector2) type_);
                type_ = subBuilder.buildPartial();
              }
              typeCase_ = 6;
              break;
            }
            case 58: {
              godot.wire.Wire.Rect2.Builder subBuilder = null;
              if (typeCase_ == 7) {
                subBuilder = ((godot.wire.Wire.Rect2) type_).toBuilder();
              }
              type_ =
                  input.readMessage(godot.wire.Wire.Rect2.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((godot.wire.Wire.Rect2) type_);
                type_ = subBuilder.buildPartial();
              }
              typeCase_ = 7;
              break;
            }
            case 66: {
              godot.wire.Wire.Vector3.Builder subBuilder = null;
              if (typeCase_ == 8) {
                subBuilder = ((godot.wire.Wire.Vector3) type_).toBuilder();
              }
              type_ =
                  input.readMessage(godot.wire.Wire.Vector3.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((godot.wire.Wire.Vector3) type_);
                type_ = subBuilder.buildPartial();
              }
              typeCase_ = 8;
              break;
            }
            case 74: {
              godot.wire.Wire.Transform2D.Builder subBuilder = null;
              if (typeCase_ == 9) {
                subBuilder = ((godot.wire.Wire.Transform2D) type_).toBuilder();
              }
              type_ =
                  input.readMessage(godot.wire.Wire.Transform2D.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((godot.wire.Wire.Transform2D) type_);
                type_ = subBuilder.buildPartial();
              }
              typeCase_ = 9;
              break;
            }
            case 82: {
              godot.wire.Wire.Plane.Builder subBuilder = null;
              if (typeCase_ == 10) {
                subBuilder = ((godot.wire.Wire.Plane) type_).toBuilder();
              }
              type_ =
                  input.readMessage(godot.wire.Wire.Plane.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((godot.wire.Wire.Plane) type_);
                type_ = subBuilder.buildPartial();
              }
              typeCase_ = 10;
              break;
            }
            case 90: {
              godot.wire.Wire.Quat.Builder subBuilder = null;
              if (typeCase_ == 11) {
                subBuilder = ((godot.wire.Wire.Quat) type_).toBuilder();
              }
              type_ =
                  input.readMessage(godot.wire.Wire.Quat.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((godot.wire.Wire.Quat) type_);
                type_ = subBuilder.buildPartial();
              }
              typeCase_ = 11;
              break;
            }
            case 98: {
              godot.wire.Wire.AABB.Builder subBuilder = null;
              if (typeCase_ == 12) {
                subBuilder = ((godot.wire.Wire.AABB) type_).toBuilder();
              }
              type_ =
                  input.readMessage(godot.wire.Wire.AABB.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((godot.wire.Wire.AABB) type_);
                type_ = subBuilder.buildPartial();
              }
              typeCase_ = 12;
              break;
            }
            case 106: {
              godot.wire.Wire.Basis.Builder subBuilder = null;
              if (typeCase_ == 13) {
                subBuilder = ((godot.wire.Wire.Basis) type_).toBuilder();
              }
              type_ =
                  input.readMessage(godot.wire.Wire.Basis.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((godot.wire.Wire.Basis) type_);
                type_ = subBuilder.buildPartial();
              }
              typeCase_ = 13;
              break;
            }
            case 114: {
              godot.wire.Wire.Transform.Builder subBuilder = null;
              if (typeCase_ == 14) {
                subBuilder = ((godot.wire.Wire.Transform) type_).toBuilder();
              }
              type_ =
                  input.readMessage(godot.wire.Wire.Transform.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((godot.wire.Wire.Transform) type_);
                type_ = subBuilder.buildPartial();
              }
              typeCase_ = 14;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return godot.wire.Wire.internal_static_KVariant_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return godot.wire.Wire.internal_static_KVariant_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              godot.wire.Wire.KVariant.class, godot.wire.Wire.KVariant.Builder.class);
    }

    private int typeCase_ = 0;
    private java.lang.Object type_;
    public enum TypeCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      NIL_VALUE(1),
      BOOL_VALUE(2),
      LONG_VALUE(3),
      REAL_VALUE(4),
      STRING_VALUE(5),
      VECTOR2_VALUE(6),
      RECT2_VALUE(7),
      VECTOR3_VALUE(8),
      TRANSFORM2D_VALUE(9),
      PLANE_VALUE(10),
      QUAT_VALUE(11),
      AABB_VALUE(12),
      BASIS_VALUE(13),
      TRANSFORM_VALUE(14),
      TYPE_NOT_SET(0);
      private final int value;
      private TypeCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static TypeCase valueOf(int value) {
        return forNumber(value);
      }

      public static TypeCase forNumber(int value) {
        switch (value) {
          case 1: return NIL_VALUE;
          case 2: return BOOL_VALUE;
          case 3: return LONG_VALUE;
          case 4: return REAL_VALUE;
          case 5: return STRING_VALUE;
          case 6: return VECTOR2_VALUE;
          case 7: return RECT2_VALUE;
          case 8: return VECTOR3_VALUE;
          case 9: return TRANSFORM2D_VALUE;
          case 10: return PLANE_VALUE;
          case 11: return QUAT_VALUE;
          case 12: return AABB_VALUE;
          case 13: return BASIS_VALUE;
          case 14: return TRANSFORM_VALUE;
          case 0: return TYPE_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public TypeCase
    getTypeCase() {
      return TypeCase.forNumber(
          typeCase_);
    }

    public static final int NIL_VALUE_FIELD_NUMBER = 1;
    /**
     * <code>int32 nil_value = 1;</code>
     * @return The nilValue.
     */
    @java.lang.Override
    public int getNilValue() {
      if (typeCase_ == 1) {
        return (java.lang.Integer) type_;
      }
      return 0;
    }

    public static final int BOOL_VALUE_FIELD_NUMBER = 2;
    /**
     * <code>bool bool_value = 2;</code>
     * @return The boolValue.
     */
    @java.lang.Override
    public boolean getBoolValue() {
      if (typeCase_ == 2) {
        return (java.lang.Boolean) type_;
      }
      return false;
    }

    public static final int LONG_VALUE_FIELD_NUMBER = 3;
    /**
     * <code>int64 long_value = 3;</code>
     * @return The longValue.
     */
    @java.lang.Override
    public long getLongValue() {
      if (typeCase_ == 3) {
        return (java.lang.Long) type_;
      }
      return 0L;
    }

    public static final int REAL_VALUE_FIELD_NUMBER = 4;
    /**
     * <code>double real_value = 4;</code>
     * @return The realValue.
     */
    @java.lang.Override
    public double getRealValue() {
      if (typeCase_ == 4) {
        return (java.lang.Double) type_;
      }
      return 0D;
    }

    public static final int STRING_VALUE_FIELD_NUMBER = 5;
    /**
     * <code>string string_value = 5;</code>
     * @return The stringValue.
     */
    public java.lang.String getStringValue() {
      java.lang.Object ref = "";
      if (typeCase_ == 5) {
        ref = type_;
      }
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (typeCase_ == 5) {
          type_ = s;
        }
        return s;
      }
    }
    /**
     * <code>string string_value = 5;</code>
     * @return The bytes for stringValue.
     */
    public com.google.protobuf.ByteString
        getStringValueBytes() {
      java.lang.Object ref = "";
      if (typeCase_ == 5) {
        ref = type_;
      }
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        if (typeCase_ == 5) {
          type_ = b;
        }
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VECTOR2_VALUE_FIELD_NUMBER = 6;
    /**
     * <code>.Vector2 vector2_value = 6;</code>
     * @return Whether the vector2Value field is set.
     */
    @java.lang.Override
    public boolean hasVector2Value() {
      return typeCase_ == 6;
    }
    /**
     * <code>.Vector2 vector2_value = 6;</code>
     * @return The vector2Value.
     */
    @java.lang.Override
    public godot.wire.Wire.Vector2 getVector2Value() {
      if (typeCase_ == 6) {
         return (godot.wire.Wire.Vector2) type_;
      }
      return godot.wire.Wire.Vector2.getDefaultInstance();
    }
    /**
     * <code>.Vector2 vector2_value = 6;</code>
     */
    @java.lang.Override
    public godot.wire.Wire.Vector2OrBuilder getVector2ValueOrBuilder() {
      if (typeCase_ == 6) {
         return (godot.wire.Wire.Vector2) type_;
      }
      return godot.wire.Wire.Vector2.getDefaultInstance();
    }

    public static final int RECT2_VALUE_FIELD_NUMBER = 7;
    /**
     * <code>.Rect2 rect2_value = 7;</code>
     * @return Whether the rect2Value field is set.
     */
    @java.lang.Override
    public boolean hasRect2Value() {
      return typeCase_ == 7;
    }
    /**
     * <code>.Rect2 rect2_value = 7;</code>
     * @return The rect2Value.
     */
    @java.lang.Override
    public godot.wire.Wire.Rect2 getRect2Value() {
      if (typeCase_ == 7) {
         return (godot.wire.Wire.Rect2) type_;
      }
      return godot.wire.Wire.Rect2.getDefaultInstance();
    }
    /**
     * <code>.Rect2 rect2_value = 7;</code>
     */
    @java.lang.Override
    public godot.wire.Wire.Rect2OrBuilder getRect2ValueOrBuilder() {
      if (typeCase_ == 7) {
         return (godot.wire.Wire.Rect2) type_;
      }
      return godot.wire.Wire.Rect2.getDefaultInstance();
    }

    public static final int VECTOR3_VALUE_FIELD_NUMBER = 8;
    /**
     * <code>.Vector3 vector3_value = 8;</code>
     * @return Whether the vector3Value field is set.
     */
    @java.lang.Override
    public boolean hasVector3Value() {
      return typeCase_ == 8;
    }
    /**
     * <code>.Vector3 vector3_value = 8;</code>
     * @return The vector3Value.
     */
    @java.lang.Override
    public godot.wire.Wire.Vector3 getVector3Value() {
      if (typeCase_ == 8) {
         return (godot.wire.Wire.Vector3) type_;
      }
      return godot.wire.Wire.Vector3.getDefaultInstance();
    }
    /**
     * <code>.Vector3 vector3_value = 8;</code>
     */
    @java.lang.Override
    public godot.wire.Wire.Vector3OrBuilder getVector3ValueOrBuilder() {
      if (typeCase_ == 8) {
         return (godot.wire.Wire.Vector3) type_;
      }
      return godot.wire.Wire.Vector3.getDefaultInstance();
    }

    public static final int TRANSFORM2D_VALUE_FIELD_NUMBER = 9;
    /**
     * <code>.Transform2D transform2D_value = 9;</code>
     * @return Whether the transform2DValue field is set.
     */
    @java.lang.Override
    public boolean hasTransform2DValue() {
      return typeCase_ == 9;
    }
    /**
     * <code>.Transform2D transform2D_value = 9;</code>
     * @return The transform2DValue.
     */
    @java.lang.Override
    public godot.wire.Wire.Transform2D getTransform2DValue() {
      if (typeCase_ == 9) {
         return (godot.wire.Wire.Transform2D) type_;
      }
      return godot.wire.Wire.Transform2D.getDefaultInstance();
    }
    /**
     * <code>.Transform2D transform2D_value = 9;</code>
     */
    @java.lang.Override
    public godot.wire.Wire.Transform2DOrBuilder getTransform2DValueOrBuilder() {
      if (typeCase_ == 9) {
         return (godot.wire.Wire.Transform2D) type_;
      }
      return godot.wire.Wire.Transform2D.getDefaultInstance();
    }

    public static final int PLANE_VALUE_FIELD_NUMBER = 10;
    /**
     * <code>.Plane plane_value = 10;</code>
     * @return Whether the planeValue field is set.
     */
    @java.lang.Override
    public boolean hasPlaneValue() {
      return typeCase_ == 10;
    }
    /**
     * <code>.Plane plane_value = 10;</code>
     * @return The planeValue.
     */
    @java.lang.Override
    public godot.wire.Wire.Plane getPlaneValue() {
      if (typeCase_ == 10) {
         return (godot.wire.Wire.Plane) type_;
      }
      return godot.wire.Wire.Plane.getDefaultInstance();
    }
    /**
     * <code>.Plane plane_value = 10;</code>
     */
    @java.lang.Override
    public godot.wire.Wire.PlaneOrBuilder getPlaneValueOrBuilder() {
      if (typeCase_ == 10) {
         return (godot.wire.Wire.Plane) type_;
      }
      return godot.wire.Wire.Plane.getDefaultInstance();
    }

    public static final int QUAT_VALUE_FIELD_NUMBER = 11;
    /**
     * <code>.Quat quat_value = 11;</code>
     * @return Whether the quatValue field is set.
     */
    @java.lang.Override
    public boolean hasQuatValue() {
      return typeCase_ == 11;
    }
    /**
     * <code>.Quat quat_value = 11;</code>
     * @return The quatValue.
     */
    @java.lang.Override
    public godot.wire.Wire.Quat getQuatValue() {
      if (typeCase_ == 11) {
         return (godot.wire.Wire.Quat) type_;
      }
      return godot.wire.Wire.Quat.getDefaultInstance();
    }
    /**
     * <code>.Quat quat_value = 11;</code>
     */
    @java.lang.Override
    public godot.wire.Wire.QuatOrBuilder getQuatValueOrBuilder() {
      if (typeCase_ == 11) {
         return (godot.wire.Wire.Quat) type_;
      }
      return godot.wire.Wire.Quat.getDefaultInstance();
    }

    public static final int AABB_VALUE_FIELD_NUMBER = 12;
    /**
     * <code>.AABB aabb_value = 12;</code>
     * @return Whether the aabbValue field is set.
     */
    @java.lang.Override
    public boolean hasAabbValue() {
      return typeCase_ == 12;
    }
    /**
     * <code>.AABB aabb_value = 12;</code>
     * @return The aabbValue.
     */
    @java.lang.Override
    public godot.wire.Wire.AABB getAabbValue() {
      if (typeCase_ == 12) {
         return (godot.wire.Wire.AABB) type_;
      }
      return godot.wire.Wire.AABB.getDefaultInstance();
    }
    /**
     * <code>.AABB aabb_value = 12;</code>
     */
    @java.lang.Override
    public godot.wire.Wire.AABBOrBuilder getAabbValueOrBuilder() {
      if (typeCase_ == 12) {
         return (godot.wire.Wire.AABB) type_;
      }
      return godot.wire.Wire.AABB.getDefaultInstance();
    }

    public static final int BASIS_VALUE_FIELD_NUMBER = 13;
    /**
     * <code>.Basis basis_value = 13;</code>
     * @return Whether the basisValue field is set.
     */
    @java.lang.Override
    public boolean hasBasisValue() {
      return typeCase_ == 13;
    }
    /**
     * <code>.Basis basis_value = 13;</code>
     * @return The basisValue.
     */
    @java.lang.Override
    public godot.wire.Wire.Basis getBasisValue() {
      if (typeCase_ == 13) {
         return (godot.wire.Wire.Basis) type_;
      }
      return godot.wire.Wire.Basis.getDefaultInstance();
    }
    /**
     * <code>.Basis basis_value = 13;</code>
     */
    @java.lang.Override
    public godot.wire.Wire.BasisOrBuilder getBasisValueOrBuilder() {
      if (typeCase_ == 13) {
         return (godot.wire.Wire.Basis) type_;
      }
      return godot.wire.Wire.Basis.getDefaultInstance();
    }

    public static final int TRANSFORM_VALUE_FIELD_NUMBER = 14;
    /**
     * <code>.Transform transform_value = 14;</code>
     * @return Whether the transformValue field is set.
     */
    @java.lang.Override
    public boolean hasTransformValue() {
      return typeCase_ == 14;
    }
    /**
     * <code>.Transform transform_value = 14;</code>
     * @return The transformValue.
     */
    @java.lang.Override
    public godot.wire.Wire.Transform getTransformValue() {
      if (typeCase_ == 14) {
         return (godot.wire.Wire.Transform) type_;
      }
      return godot.wire.Wire.Transform.getDefaultInstance();
    }
    /**
     * <code>.Transform transform_value = 14;</code>
     */
    @java.lang.Override
    public godot.wire.Wire.TransformOrBuilder getTransformValueOrBuilder() {
      if (typeCase_ == 14) {
         return (godot.wire.Wire.Transform) type_;
      }
      return godot.wire.Wire.Transform.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (typeCase_ == 1) {
        output.writeInt32(
            1, (int)((java.lang.Integer) type_));
      }
      if (typeCase_ == 2) {
        output.writeBool(
            2, (boolean)((java.lang.Boolean) type_));
      }
      if (typeCase_ == 3) {
        output.writeInt64(
            3, (long)((java.lang.Long) type_));
      }
      if (typeCase_ == 4) {
        output.writeDouble(
            4, (double)((java.lang.Double) type_));
      }
      if (typeCase_ == 5) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, type_);
      }
      if (typeCase_ == 6) {
        output.writeMessage(6, (godot.wire.Wire.Vector2) type_);
      }
      if (typeCase_ == 7) {
        output.writeMessage(7, (godot.wire.Wire.Rect2) type_);
      }
      if (typeCase_ == 8) {
        output.writeMessage(8, (godot.wire.Wire.Vector3) type_);
      }
      if (typeCase_ == 9) {
        output.writeMessage(9, (godot.wire.Wire.Transform2D) type_);
      }
      if (typeCase_ == 10) {
        output.writeMessage(10, (godot.wire.Wire.Plane) type_);
      }
      if (typeCase_ == 11) {
        output.writeMessage(11, (godot.wire.Wire.Quat) type_);
      }
      if (typeCase_ == 12) {
        output.writeMessage(12, (godot.wire.Wire.AABB) type_);
      }
      if (typeCase_ == 13) {
        output.writeMessage(13, (godot.wire.Wire.Basis) type_);
      }
      if (typeCase_ == 14) {
        output.writeMessage(14, (godot.wire.Wire.Transform) type_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (typeCase_ == 1) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(
              1, (int)((java.lang.Integer) type_));
      }
      if (typeCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(
              2, (boolean)((java.lang.Boolean) type_));
      }
      if (typeCase_ == 3) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(
              3, (long)((java.lang.Long) type_));
      }
      if (typeCase_ == 4) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(
              4, (double)((java.lang.Double) type_));
      }
      if (typeCase_ == 5) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, type_);
      }
      if (typeCase_ == 6) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, (godot.wire.Wire.Vector2) type_);
      }
      if (typeCase_ == 7) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, (godot.wire.Wire.Rect2) type_);
      }
      if (typeCase_ == 8) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, (godot.wire.Wire.Vector3) type_);
      }
      if (typeCase_ == 9) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, (godot.wire.Wire.Transform2D) type_);
      }
      if (typeCase_ == 10) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, (godot.wire.Wire.Plane) type_);
      }
      if (typeCase_ == 11) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, (godot.wire.Wire.Quat) type_);
      }
      if (typeCase_ == 12) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, (godot.wire.Wire.AABB) type_);
      }
      if (typeCase_ == 13) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(13, (godot.wire.Wire.Basis) type_);
      }
      if (typeCase_ == 14) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(14, (godot.wire.Wire.Transform) type_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof godot.wire.Wire.KVariant)) {
        return super.equals(obj);
      }
      godot.wire.Wire.KVariant other = (godot.wire.Wire.KVariant) obj;

      if (!getTypeCase().equals(other.getTypeCase())) return false;
      switch (typeCase_) {
        case 1:
          if (getNilValue()
              != other.getNilValue()) return false;
          break;
        case 2:
          if (getBoolValue()
              != other.getBoolValue()) return false;
          break;
        case 3:
          if (getLongValue()
              != other.getLongValue()) return false;
          break;
        case 4:
          if (java.lang.Double.doubleToLongBits(getRealValue())
              != java.lang.Double.doubleToLongBits(
                  other.getRealValue())) return false;
          break;
        case 5:
          if (!getStringValue()
              .equals(other.getStringValue())) return false;
          break;
        case 6:
          if (!getVector2Value()
              .equals(other.getVector2Value())) return false;
          break;
        case 7:
          if (!getRect2Value()
              .equals(other.getRect2Value())) return false;
          break;
        case 8:
          if (!getVector3Value()
              .equals(other.getVector3Value())) return false;
          break;
        case 9:
          if (!getTransform2DValue()
              .equals(other.getTransform2DValue())) return false;
          break;
        case 10:
          if (!getPlaneValue()
              .equals(other.getPlaneValue())) return false;
          break;
        case 11:
          if (!getQuatValue()
              .equals(other.getQuatValue())) return false;
          break;
        case 12:
          if (!getAabbValue()
              .equals(other.getAabbValue())) return false;
          break;
        case 13:
          if (!getBasisValue()
              .equals(other.getBasisValue())) return false;
          break;
        case 14:
          if (!getTransformValue()
              .equals(other.getTransformValue())) return false;
          break;
        case 0:
        default:
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      switch (typeCase_) {
        case 1:
          hash = (37 * hash) + NIL_VALUE_FIELD_NUMBER;
          hash = (53 * hash) + getNilValue();
          break;
        case 2:
          hash = (37 * hash) + BOOL_VALUE_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getBoolValue());
          break;
        case 3:
          hash = (37 * hash) + LONG_VALUE_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getLongValue());
          break;
        case 4:
          hash = (37 * hash) + REAL_VALUE_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              java.lang.Double.doubleToLongBits(getRealValue()));
          break;
        case 5:
          hash = (37 * hash) + STRING_VALUE_FIELD_NUMBER;
          hash = (53 * hash) + getStringValue().hashCode();
          break;
        case 6:
          hash = (37 * hash) + VECTOR2_VALUE_FIELD_NUMBER;
          hash = (53 * hash) + getVector2Value().hashCode();
          break;
        case 7:
          hash = (37 * hash) + RECT2_VALUE_FIELD_NUMBER;
          hash = (53 * hash) + getRect2Value().hashCode();
          break;
        case 8:
          hash = (37 * hash) + VECTOR3_VALUE_FIELD_NUMBER;
          hash = (53 * hash) + getVector3Value().hashCode();
          break;
        case 9:
          hash = (37 * hash) + TRANSFORM2D_VALUE_FIELD_NUMBER;
          hash = (53 * hash) + getTransform2DValue().hashCode();
          break;
        case 10:
          hash = (37 * hash) + PLANE_VALUE_FIELD_NUMBER;
          hash = (53 * hash) + getPlaneValue().hashCode();
          break;
        case 11:
          hash = (37 * hash) + QUAT_VALUE_FIELD_NUMBER;
          hash = (53 * hash) + getQuatValue().hashCode();
          break;
        case 12:
          hash = (37 * hash) + AABB_VALUE_FIELD_NUMBER;
          hash = (53 * hash) + getAabbValue().hashCode();
          break;
        case 13:
          hash = (37 * hash) + BASIS_VALUE_FIELD_NUMBER;
          hash = (53 * hash) + getBasisValue().hashCode();
          break;
        case 14:
          hash = (37 * hash) + TRANSFORM_VALUE_FIELD_NUMBER;
          hash = (53 * hash) + getTransformValue().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static godot.wire.Wire.KVariant parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static godot.wire.Wire.KVariant parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static godot.wire.Wire.KVariant parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static godot.wire.Wire.KVariant parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static godot.wire.Wire.KVariant parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static godot.wire.Wire.KVariant parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static godot.wire.Wire.KVariant parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static godot.wire.Wire.KVariant parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static godot.wire.Wire.KVariant parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static godot.wire.Wire.KVariant parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static godot.wire.Wire.KVariant parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static godot.wire.Wire.KVariant parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(godot.wire.Wire.KVariant prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code KVariant}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:KVariant)
        godot.wire.Wire.KVariantOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return godot.wire.Wire.internal_static_KVariant_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return godot.wire.Wire.internal_static_KVariant_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                godot.wire.Wire.KVariant.class, godot.wire.Wire.KVariant.Builder.class);
      }

      // Construct using godot.wire.Wire.KVariant.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        typeCase_ = 0;
        type_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return godot.wire.Wire.internal_static_KVariant_descriptor;
      }

      @java.lang.Override
      public godot.wire.Wire.KVariant getDefaultInstanceForType() {
        return godot.wire.Wire.KVariant.getDefaultInstance();
      }

      @java.lang.Override
      public godot.wire.Wire.KVariant build() {
        godot.wire.Wire.KVariant result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public godot.wire.Wire.KVariant buildPartial() {
        godot.wire.Wire.KVariant result = new godot.wire.Wire.KVariant(this);
        if (typeCase_ == 1) {
          result.type_ = type_;
        }
        if (typeCase_ == 2) {
          result.type_ = type_;
        }
        if (typeCase_ == 3) {
          result.type_ = type_;
        }
        if (typeCase_ == 4) {
          result.type_ = type_;
        }
        if (typeCase_ == 5) {
          result.type_ = type_;
        }
        if (typeCase_ == 6) {
          if (vector2ValueBuilder_ == null) {
            result.type_ = type_;
          } else {
            result.type_ = vector2ValueBuilder_.build();
          }
        }
        if (typeCase_ == 7) {
          if (rect2ValueBuilder_ == null) {
            result.type_ = type_;
          } else {
            result.type_ = rect2ValueBuilder_.build();
          }
        }
        if (typeCase_ == 8) {
          if (vector3ValueBuilder_ == null) {
            result.type_ = type_;
          } else {
            result.type_ = vector3ValueBuilder_.build();
          }
        }
        if (typeCase_ == 9) {
          if (transform2DValueBuilder_ == null) {
            result.type_ = type_;
          } else {
            result.type_ = transform2DValueBuilder_.build();
          }
        }
        if (typeCase_ == 10) {
          if (planeValueBuilder_ == null) {
            result.type_ = type_;
          } else {
            result.type_ = planeValueBuilder_.build();
          }
        }
        if (typeCase_ == 11) {
          if (quatValueBuilder_ == null) {
            result.type_ = type_;
          } else {
            result.type_ = quatValueBuilder_.build();
          }
        }
        if (typeCase_ == 12) {
          if (aabbValueBuilder_ == null) {
            result.type_ = type_;
          } else {
            result.type_ = aabbValueBuilder_.build();
          }
        }
        if (typeCase_ == 13) {
          if (basisValueBuilder_ == null) {
            result.type_ = type_;
          } else {
            result.type_ = basisValueBuilder_.build();
          }
        }
        if (typeCase_ == 14) {
          if (transformValueBuilder_ == null) {
            result.type_ = type_;
          } else {
            result.type_ = transformValueBuilder_.build();
          }
        }
        result.typeCase_ = typeCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof godot.wire.Wire.KVariant) {
          return mergeFrom((godot.wire.Wire.KVariant)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(godot.wire.Wire.KVariant other) {
        if (other == godot.wire.Wire.KVariant.getDefaultInstance()) return this;
        switch (other.getTypeCase()) {
          case NIL_VALUE: {
            setNilValue(other.getNilValue());
            break;
          }
          case BOOL_VALUE: {
            setBoolValue(other.getBoolValue());
            break;
          }
          case LONG_VALUE: {
            setLongValue(other.getLongValue());
            break;
          }
          case REAL_VALUE: {
            setRealValue(other.getRealValue());
            break;
          }
          case STRING_VALUE: {
            typeCase_ = 5;
            type_ = other.type_;
            onChanged();
            break;
          }
          case VECTOR2_VALUE: {
            mergeVector2Value(other.getVector2Value());
            break;
          }
          case RECT2_VALUE: {
            mergeRect2Value(other.getRect2Value());
            break;
          }
          case VECTOR3_VALUE: {
            mergeVector3Value(other.getVector3Value());
            break;
          }
          case TRANSFORM2D_VALUE: {
            mergeTransform2DValue(other.getTransform2DValue());
            break;
          }
          case PLANE_VALUE: {
            mergePlaneValue(other.getPlaneValue());
            break;
          }
          case QUAT_VALUE: {
            mergeQuatValue(other.getQuatValue());
            break;
          }
          case AABB_VALUE: {
            mergeAabbValue(other.getAabbValue());
            break;
          }
          case BASIS_VALUE: {
            mergeBasisValue(other.getBasisValue());
            break;
          }
          case TRANSFORM_VALUE: {
            mergeTransformValue(other.getTransformValue());
            break;
          }
          case TYPE_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        godot.wire.Wire.KVariant parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (godot.wire.Wire.KVariant) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int typeCase_ = 0;
      private java.lang.Object type_;
      public TypeCase
          getTypeCase() {
        return TypeCase.forNumber(
            typeCase_);
      }

      public Builder clearType() {
        typeCase_ = 0;
        type_ = null;
        onChanged();
        return this;
      }


      /**
       * <code>int32 nil_value = 1;</code>
       * @return The nilValue.
       */
      public int getNilValue() {
        if (typeCase_ == 1) {
          return (java.lang.Integer) type_;
        }
        return 0;
      }
      /**
       * <code>int32 nil_value = 1;</code>
       * @param value The nilValue to set.
       * @return This builder for chaining.
       */
      public Builder setNilValue(int value) {
        typeCase_ = 1;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 nil_value = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearNilValue() {
        if (typeCase_ == 1) {
          typeCase_ = 0;
          type_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <code>bool bool_value = 2;</code>
       * @return The boolValue.
       */
      public boolean getBoolValue() {
        if (typeCase_ == 2) {
          return (java.lang.Boolean) type_;
        }
        return false;
      }
      /**
       * <code>bool bool_value = 2;</code>
       * @param value The boolValue to set.
       * @return This builder for chaining.
       */
      public Builder setBoolValue(boolean value) {
        typeCase_ = 2;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool bool_value = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearBoolValue() {
        if (typeCase_ == 2) {
          typeCase_ = 0;
          type_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <code>int64 long_value = 3;</code>
       * @return The longValue.
       */
      public long getLongValue() {
        if (typeCase_ == 3) {
          return (java.lang.Long) type_;
        }
        return 0L;
      }
      /**
       * <code>int64 long_value = 3;</code>
       * @param value The longValue to set.
       * @return This builder for chaining.
       */
      public Builder setLongValue(long value) {
        typeCase_ = 3;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 long_value = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearLongValue() {
        if (typeCase_ == 3) {
          typeCase_ = 0;
          type_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <code>double real_value = 4;</code>
       * @return The realValue.
       */
      public double getRealValue() {
        if (typeCase_ == 4) {
          return (java.lang.Double) type_;
        }
        return 0D;
      }
      /**
       * <code>double real_value = 4;</code>
       * @param value The realValue to set.
       * @return This builder for chaining.
       */
      public Builder setRealValue(double value) {
        typeCase_ = 4;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double real_value = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearRealValue() {
        if (typeCase_ == 4) {
          typeCase_ = 0;
          type_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <code>string string_value = 5;</code>
       * @return The stringValue.
       */
      @java.lang.Override
      public java.lang.String getStringValue() {
        java.lang.Object ref = "";
        if (typeCase_ == 5) {
          ref = type_;
        }
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (typeCase_ == 5) {
            type_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string string_value = 5;</code>
       * @return The bytes for stringValue.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getStringValueBytes() {
        java.lang.Object ref = "";
        if (typeCase_ == 5) {
          ref = type_;
        }
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          if (typeCase_ == 5) {
            type_ = b;
          }
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string string_value = 5;</code>
       * @param value The stringValue to set.
       * @return This builder for chaining.
       */
      public Builder setStringValue(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  typeCase_ = 5;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string string_value = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearStringValue() {
        if (typeCase_ == 5) {
          typeCase_ = 0;
          type_ = null;
          onChanged();
        }
        return this;
      }
      /**
       * <code>string string_value = 5;</code>
       * @param value The bytes for stringValue to set.
       * @return This builder for chaining.
       */
      public Builder setStringValueBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        typeCase_ = 5;
        type_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          godot.wire.Wire.Vector2, godot.wire.Wire.Vector2.Builder, godot.wire.Wire.Vector2OrBuilder> vector2ValueBuilder_;
      /**
       * <code>.Vector2 vector2_value = 6;</code>
       * @return Whether the vector2Value field is set.
       */
      @java.lang.Override
      public boolean hasVector2Value() {
        return typeCase_ == 6;
      }
      /**
       * <code>.Vector2 vector2_value = 6;</code>
       * @return The vector2Value.
       */
      @java.lang.Override
      public godot.wire.Wire.Vector2 getVector2Value() {
        if (vector2ValueBuilder_ == null) {
          if (typeCase_ == 6) {
            return (godot.wire.Wire.Vector2) type_;
          }
          return godot.wire.Wire.Vector2.getDefaultInstance();
        } else {
          if (typeCase_ == 6) {
            return vector2ValueBuilder_.getMessage();
          }
          return godot.wire.Wire.Vector2.getDefaultInstance();
        }
      }
      /**
       * <code>.Vector2 vector2_value = 6;</code>
       */
      public Builder setVector2Value(godot.wire.Wire.Vector2 value) {
        if (vector2ValueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          type_ = value;
          onChanged();
        } else {
          vector2ValueBuilder_.setMessage(value);
        }
        typeCase_ = 6;
        return this;
      }
      /**
       * <code>.Vector2 vector2_value = 6;</code>
       */
      public Builder setVector2Value(
          godot.wire.Wire.Vector2.Builder builderForValue) {
        if (vector2ValueBuilder_ == null) {
          type_ = builderForValue.build();
          onChanged();
        } else {
          vector2ValueBuilder_.setMessage(builderForValue.build());
        }
        typeCase_ = 6;
        return this;
      }
      /**
       * <code>.Vector2 vector2_value = 6;</code>
       */
      public Builder mergeVector2Value(godot.wire.Wire.Vector2 value) {
        if (vector2ValueBuilder_ == null) {
          if (typeCase_ == 6 &&
              type_ != godot.wire.Wire.Vector2.getDefaultInstance()) {
            type_ = godot.wire.Wire.Vector2.newBuilder((godot.wire.Wire.Vector2) type_)
                .mergeFrom(value).buildPartial();
          } else {
            type_ = value;
          }
          onChanged();
        } else {
          if (typeCase_ == 6) {
            vector2ValueBuilder_.mergeFrom(value);
          }
          vector2ValueBuilder_.setMessage(value);
        }
        typeCase_ = 6;
        return this;
      }
      /**
       * <code>.Vector2 vector2_value = 6;</code>
       */
      public Builder clearVector2Value() {
        if (vector2ValueBuilder_ == null) {
          if (typeCase_ == 6) {
            typeCase_ = 0;
            type_ = null;
            onChanged();
          }
        } else {
          if (typeCase_ == 6) {
            typeCase_ = 0;
            type_ = null;
          }
          vector2ValueBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.Vector2 vector2_value = 6;</code>
       */
      public godot.wire.Wire.Vector2.Builder getVector2ValueBuilder() {
        return getVector2ValueFieldBuilder().getBuilder();
      }
      /**
       * <code>.Vector2 vector2_value = 6;</code>
       */
      @java.lang.Override
      public godot.wire.Wire.Vector2OrBuilder getVector2ValueOrBuilder() {
        if ((typeCase_ == 6) && (vector2ValueBuilder_ != null)) {
          return vector2ValueBuilder_.getMessageOrBuilder();
        } else {
          if (typeCase_ == 6) {
            return (godot.wire.Wire.Vector2) type_;
          }
          return godot.wire.Wire.Vector2.getDefaultInstance();
        }
      }
      /**
       * <code>.Vector2 vector2_value = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          godot.wire.Wire.Vector2, godot.wire.Wire.Vector2.Builder, godot.wire.Wire.Vector2OrBuilder> 
          getVector2ValueFieldBuilder() {
        if (vector2ValueBuilder_ == null) {
          if (!(typeCase_ == 6)) {
            type_ = godot.wire.Wire.Vector2.getDefaultInstance();
          }
          vector2ValueBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              godot.wire.Wire.Vector2, godot.wire.Wire.Vector2.Builder, godot.wire.Wire.Vector2OrBuilder>(
                  (godot.wire.Wire.Vector2) type_,
                  getParentForChildren(),
                  isClean());
          type_ = null;
        }
        typeCase_ = 6;
        onChanged();;
        return vector2ValueBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          godot.wire.Wire.Rect2, godot.wire.Wire.Rect2.Builder, godot.wire.Wire.Rect2OrBuilder> rect2ValueBuilder_;
      /**
       * <code>.Rect2 rect2_value = 7;</code>
       * @return Whether the rect2Value field is set.
       */
      @java.lang.Override
      public boolean hasRect2Value() {
        return typeCase_ == 7;
      }
      /**
       * <code>.Rect2 rect2_value = 7;</code>
       * @return The rect2Value.
       */
      @java.lang.Override
      public godot.wire.Wire.Rect2 getRect2Value() {
        if (rect2ValueBuilder_ == null) {
          if (typeCase_ == 7) {
            return (godot.wire.Wire.Rect2) type_;
          }
          return godot.wire.Wire.Rect2.getDefaultInstance();
        } else {
          if (typeCase_ == 7) {
            return rect2ValueBuilder_.getMessage();
          }
          return godot.wire.Wire.Rect2.getDefaultInstance();
        }
      }
      /**
       * <code>.Rect2 rect2_value = 7;</code>
       */
      public Builder setRect2Value(godot.wire.Wire.Rect2 value) {
        if (rect2ValueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          type_ = value;
          onChanged();
        } else {
          rect2ValueBuilder_.setMessage(value);
        }
        typeCase_ = 7;
        return this;
      }
      /**
       * <code>.Rect2 rect2_value = 7;</code>
       */
      public Builder setRect2Value(
          godot.wire.Wire.Rect2.Builder builderForValue) {
        if (rect2ValueBuilder_ == null) {
          type_ = builderForValue.build();
          onChanged();
        } else {
          rect2ValueBuilder_.setMessage(builderForValue.build());
        }
        typeCase_ = 7;
        return this;
      }
      /**
       * <code>.Rect2 rect2_value = 7;</code>
       */
      public Builder mergeRect2Value(godot.wire.Wire.Rect2 value) {
        if (rect2ValueBuilder_ == null) {
          if (typeCase_ == 7 &&
              type_ != godot.wire.Wire.Rect2.getDefaultInstance()) {
            type_ = godot.wire.Wire.Rect2.newBuilder((godot.wire.Wire.Rect2) type_)
                .mergeFrom(value).buildPartial();
          } else {
            type_ = value;
          }
          onChanged();
        } else {
          if (typeCase_ == 7) {
            rect2ValueBuilder_.mergeFrom(value);
          }
          rect2ValueBuilder_.setMessage(value);
        }
        typeCase_ = 7;
        return this;
      }
      /**
       * <code>.Rect2 rect2_value = 7;</code>
       */
      public Builder clearRect2Value() {
        if (rect2ValueBuilder_ == null) {
          if (typeCase_ == 7) {
            typeCase_ = 0;
            type_ = null;
            onChanged();
          }
        } else {
          if (typeCase_ == 7) {
            typeCase_ = 0;
            type_ = null;
          }
          rect2ValueBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.Rect2 rect2_value = 7;</code>
       */
      public godot.wire.Wire.Rect2.Builder getRect2ValueBuilder() {
        return getRect2ValueFieldBuilder().getBuilder();
      }
      /**
       * <code>.Rect2 rect2_value = 7;</code>
       */
      @java.lang.Override
      public godot.wire.Wire.Rect2OrBuilder getRect2ValueOrBuilder() {
        if ((typeCase_ == 7) && (rect2ValueBuilder_ != null)) {
          return rect2ValueBuilder_.getMessageOrBuilder();
        } else {
          if (typeCase_ == 7) {
            return (godot.wire.Wire.Rect2) type_;
          }
          return godot.wire.Wire.Rect2.getDefaultInstance();
        }
      }
      /**
       * <code>.Rect2 rect2_value = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          godot.wire.Wire.Rect2, godot.wire.Wire.Rect2.Builder, godot.wire.Wire.Rect2OrBuilder> 
          getRect2ValueFieldBuilder() {
        if (rect2ValueBuilder_ == null) {
          if (!(typeCase_ == 7)) {
            type_ = godot.wire.Wire.Rect2.getDefaultInstance();
          }
          rect2ValueBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              godot.wire.Wire.Rect2, godot.wire.Wire.Rect2.Builder, godot.wire.Wire.Rect2OrBuilder>(
                  (godot.wire.Wire.Rect2) type_,
                  getParentForChildren(),
                  isClean());
          type_ = null;
        }
        typeCase_ = 7;
        onChanged();;
        return rect2ValueBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          godot.wire.Wire.Vector3, godot.wire.Wire.Vector3.Builder, godot.wire.Wire.Vector3OrBuilder> vector3ValueBuilder_;
      /**
       * <code>.Vector3 vector3_value = 8;</code>
       * @return Whether the vector3Value field is set.
       */
      @java.lang.Override
      public boolean hasVector3Value() {
        return typeCase_ == 8;
      }
      /**
       * <code>.Vector3 vector3_value = 8;</code>
       * @return The vector3Value.
       */
      @java.lang.Override
      public godot.wire.Wire.Vector3 getVector3Value() {
        if (vector3ValueBuilder_ == null) {
          if (typeCase_ == 8) {
            return (godot.wire.Wire.Vector3) type_;
          }
          return godot.wire.Wire.Vector3.getDefaultInstance();
        } else {
          if (typeCase_ == 8) {
            return vector3ValueBuilder_.getMessage();
          }
          return godot.wire.Wire.Vector3.getDefaultInstance();
        }
      }
      /**
       * <code>.Vector3 vector3_value = 8;</code>
       */
      public Builder setVector3Value(godot.wire.Wire.Vector3 value) {
        if (vector3ValueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          type_ = value;
          onChanged();
        } else {
          vector3ValueBuilder_.setMessage(value);
        }
        typeCase_ = 8;
        return this;
      }
      /**
       * <code>.Vector3 vector3_value = 8;</code>
       */
      public Builder setVector3Value(
          godot.wire.Wire.Vector3.Builder builderForValue) {
        if (vector3ValueBuilder_ == null) {
          type_ = builderForValue.build();
          onChanged();
        } else {
          vector3ValueBuilder_.setMessage(builderForValue.build());
        }
        typeCase_ = 8;
        return this;
      }
      /**
       * <code>.Vector3 vector3_value = 8;</code>
       */
      public Builder mergeVector3Value(godot.wire.Wire.Vector3 value) {
        if (vector3ValueBuilder_ == null) {
          if (typeCase_ == 8 &&
              type_ != godot.wire.Wire.Vector3.getDefaultInstance()) {
            type_ = godot.wire.Wire.Vector3.newBuilder((godot.wire.Wire.Vector3) type_)
                .mergeFrom(value).buildPartial();
          } else {
            type_ = value;
          }
          onChanged();
        } else {
          if (typeCase_ == 8) {
            vector3ValueBuilder_.mergeFrom(value);
          }
          vector3ValueBuilder_.setMessage(value);
        }
        typeCase_ = 8;
        return this;
      }
      /**
       * <code>.Vector3 vector3_value = 8;</code>
       */
      public Builder clearVector3Value() {
        if (vector3ValueBuilder_ == null) {
          if (typeCase_ == 8) {
            typeCase_ = 0;
            type_ = null;
            onChanged();
          }
        } else {
          if (typeCase_ == 8) {
            typeCase_ = 0;
            type_ = null;
          }
          vector3ValueBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.Vector3 vector3_value = 8;</code>
       */
      public godot.wire.Wire.Vector3.Builder getVector3ValueBuilder() {
        return getVector3ValueFieldBuilder().getBuilder();
      }
      /**
       * <code>.Vector3 vector3_value = 8;</code>
       */
      @java.lang.Override
      public godot.wire.Wire.Vector3OrBuilder getVector3ValueOrBuilder() {
        if ((typeCase_ == 8) && (vector3ValueBuilder_ != null)) {
          return vector3ValueBuilder_.getMessageOrBuilder();
        } else {
          if (typeCase_ == 8) {
            return (godot.wire.Wire.Vector3) type_;
          }
          return godot.wire.Wire.Vector3.getDefaultInstance();
        }
      }
      /**
       * <code>.Vector3 vector3_value = 8;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          godot.wire.Wire.Vector3, godot.wire.Wire.Vector3.Builder, godot.wire.Wire.Vector3OrBuilder> 
          getVector3ValueFieldBuilder() {
        if (vector3ValueBuilder_ == null) {
          if (!(typeCase_ == 8)) {
            type_ = godot.wire.Wire.Vector3.getDefaultInstance();
          }
          vector3ValueBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              godot.wire.Wire.Vector3, godot.wire.Wire.Vector3.Builder, godot.wire.Wire.Vector3OrBuilder>(
                  (godot.wire.Wire.Vector3) type_,
                  getParentForChildren(),
                  isClean());
          type_ = null;
        }
        typeCase_ = 8;
        onChanged();;
        return vector3ValueBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          godot.wire.Wire.Transform2D, godot.wire.Wire.Transform2D.Builder, godot.wire.Wire.Transform2DOrBuilder> transform2DValueBuilder_;
      /**
       * <code>.Transform2D transform2D_value = 9;</code>
       * @return Whether the transform2DValue field is set.
       */
      @java.lang.Override
      public boolean hasTransform2DValue() {
        return typeCase_ == 9;
      }
      /**
       * <code>.Transform2D transform2D_value = 9;</code>
       * @return The transform2DValue.
       */
      @java.lang.Override
      public godot.wire.Wire.Transform2D getTransform2DValue() {
        if (transform2DValueBuilder_ == null) {
          if (typeCase_ == 9) {
            return (godot.wire.Wire.Transform2D) type_;
          }
          return godot.wire.Wire.Transform2D.getDefaultInstance();
        } else {
          if (typeCase_ == 9) {
            return transform2DValueBuilder_.getMessage();
          }
          return godot.wire.Wire.Transform2D.getDefaultInstance();
        }
      }
      /**
       * <code>.Transform2D transform2D_value = 9;</code>
       */
      public Builder setTransform2DValue(godot.wire.Wire.Transform2D value) {
        if (transform2DValueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          type_ = value;
          onChanged();
        } else {
          transform2DValueBuilder_.setMessage(value);
        }
        typeCase_ = 9;
        return this;
      }
      /**
       * <code>.Transform2D transform2D_value = 9;</code>
       */
      public Builder setTransform2DValue(
          godot.wire.Wire.Transform2D.Builder builderForValue) {
        if (transform2DValueBuilder_ == null) {
          type_ = builderForValue.build();
          onChanged();
        } else {
          transform2DValueBuilder_.setMessage(builderForValue.build());
        }
        typeCase_ = 9;
        return this;
      }
      /**
       * <code>.Transform2D transform2D_value = 9;</code>
       */
      public Builder mergeTransform2DValue(godot.wire.Wire.Transform2D value) {
        if (transform2DValueBuilder_ == null) {
          if (typeCase_ == 9 &&
              type_ != godot.wire.Wire.Transform2D.getDefaultInstance()) {
            type_ = godot.wire.Wire.Transform2D.newBuilder((godot.wire.Wire.Transform2D) type_)
                .mergeFrom(value).buildPartial();
          } else {
            type_ = value;
          }
          onChanged();
        } else {
          if (typeCase_ == 9) {
            transform2DValueBuilder_.mergeFrom(value);
          }
          transform2DValueBuilder_.setMessage(value);
        }
        typeCase_ = 9;
        return this;
      }
      /**
       * <code>.Transform2D transform2D_value = 9;</code>
       */
      public Builder clearTransform2DValue() {
        if (transform2DValueBuilder_ == null) {
          if (typeCase_ == 9) {
            typeCase_ = 0;
            type_ = null;
            onChanged();
          }
        } else {
          if (typeCase_ == 9) {
            typeCase_ = 0;
            type_ = null;
          }
          transform2DValueBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.Transform2D transform2D_value = 9;</code>
       */
      public godot.wire.Wire.Transform2D.Builder getTransform2DValueBuilder() {
        return getTransform2DValueFieldBuilder().getBuilder();
      }
      /**
       * <code>.Transform2D transform2D_value = 9;</code>
       */
      @java.lang.Override
      public godot.wire.Wire.Transform2DOrBuilder getTransform2DValueOrBuilder() {
        if ((typeCase_ == 9) && (transform2DValueBuilder_ != null)) {
          return transform2DValueBuilder_.getMessageOrBuilder();
        } else {
          if (typeCase_ == 9) {
            return (godot.wire.Wire.Transform2D) type_;
          }
          return godot.wire.Wire.Transform2D.getDefaultInstance();
        }
      }
      /**
       * <code>.Transform2D transform2D_value = 9;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          godot.wire.Wire.Transform2D, godot.wire.Wire.Transform2D.Builder, godot.wire.Wire.Transform2DOrBuilder> 
          getTransform2DValueFieldBuilder() {
        if (transform2DValueBuilder_ == null) {
          if (!(typeCase_ == 9)) {
            type_ = godot.wire.Wire.Transform2D.getDefaultInstance();
          }
          transform2DValueBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              godot.wire.Wire.Transform2D, godot.wire.Wire.Transform2D.Builder, godot.wire.Wire.Transform2DOrBuilder>(
                  (godot.wire.Wire.Transform2D) type_,
                  getParentForChildren(),
                  isClean());
          type_ = null;
        }
        typeCase_ = 9;
        onChanged();;
        return transform2DValueBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          godot.wire.Wire.Plane, godot.wire.Wire.Plane.Builder, godot.wire.Wire.PlaneOrBuilder> planeValueBuilder_;
      /**
       * <code>.Plane plane_value = 10;</code>
       * @return Whether the planeValue field is set.
       */
      @java.lang.Override
      public boolean hasPlaneValue() {
        return typeCase_ == 10;
      }
      /**
       * <code>.Plane plane_value = 10;</code>
       * @return The planeValue.
       */
      @java.lang.Override
      public godot.wire.Wire.Plane getPlaneValue() {
        if (planeValueBuilder_ == null) {
          if (typeCase_ == 10) {
            return (godot.wire.Wire.Plane) type_;
          }
          return godot.wire.Wire.Plane.getDefaultInstance();
        } else {
          if (typeCase_ == 10) {
            return planeValueBuilder_.getMessage();
          }
          return godot.wire.Wire.Plane.getDefaultInstance();
        }
      }
      /**
       * <code>.Plane plane_value = 10;</code>
       */
      public Builder setPlaneValue(godot.wire.Wire.Plane value) {
        if (planeValueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          type_ = value;
          onChanged();
        } else {
          planeValueBuilder_.setMessage(value);
        }
        typeCase_ = 10;
        return this;
      }
      /**
       * <code>.Plane plane_value = 10;</code>
       */
      public Builder setPlaneValue(
          godot.wire.Wire.Plane.Builder builderForValue) {
        if (planeValueBuilder_ == null) {
          type_ = builderForValue.build();
          onChanged();
        } else {
          planeValueBuilder_.setMessage(builderForValue.build());
        }
        typeCase_ = 10;
        return this;
      }
      /**
       * <code>.Plane plane_value = 10;</code>
       */
      public Builder mergePlaneValue(godot.wire.Wire.Plane value) {
        if (planeValueBuilder_ == null) {
          if (typeCase_ == 10 &&
              type_ != godot.wire.Wire.Plane.getDefaultInstance()) {
            type_ = godot.wire.Wire.Plane.newBuilder((godot.wire.Wire.Plane) type_)
                .mergeFrom(value).buildPartial();
          } else {
            type_ = value;
          }
          onChanged();
        } else {
          if (typeCase_ == 10) {
            planeValueBuilder_.mergeFrom(value);
          }
          planeValueBuilder_.setMessage(value);
        }
        typeCase_ = 10;
        return this;
      }
      /**
       * <code>.Plane plane_value = 10;</code>
       */
      public Builder clearPlaneValue() {
        if (planeValueBuilder_ == null) {
          if (typeCase_ == 10) {
            typeCase_ = 0;
            type_ = null;
            onChanged();
          }
        } else {
          if (typeCase_ == 10) {
            typeCase_ = 0;
            type_ = null;
          }
          planeValueBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.Plane plane_value = 10;</code>
       */
      public godot.wire.Wire.Plane.Builder getPlaneValueBuilder() {
        return getPlaneValueFieldBuilder().getBuilder();
      }
      /**
       * <code>.Plane plane_value = 10;</code>
       */
      @java.lang.Override
      public godot.wire.Wire.PlaneOrBuilder getPlaneValueOrBuilder() {
        if ((typeCase_ == 10) && (planeValueBuilder_ != null)) {
          return planeValueBuilder_.getMessageOrBuilder();
        } else {
          if (typeCase_ == 10) {
            return (godot.wire.Wire.Plane) type_;
          }
          return godot.wire.Wire.Plane.getDefaultInstance();
        }
      }
      /**
       * <code>.Plane plane_value = 10;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          godot.wire.Wire.Plane, godot.wire.Wire.Plane.Builder, godot.wire.Wire.PlaneOrBuilder> 
          getPlaneValueFieldBuilder() {
        if (planeValueBuilder_ == null) {
          if (!(typeCase_ == 10)) {
            type_ = godot.wire.Wire.Plane.getDefaultInstance();
          }
          planeValueBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              godot.wire.Wire.Plane, godot.wire.Wire.Plane.Builder, godot.wire.Wire.PlaneOrBuilder>(
                  (godot.wire.Wire.Plane) type_,
                  getParentForChildren(),
                  isClean());
          type_ = null;
        }
        typeCase_ = 10;
        onChanged();;
        return planeValueBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          godot.wire.Wire.Quat, godot.wire.Wire.Quat.Builder, godot.wire.Wire.QuatOrBuilder> quatValueBuilder_;
      /**
       * <code>.Quat quat_value = 11;</code>
       * @return Whether the quatValue field is set.
       */
      @java.lang.Override
      public boolean hasQuatValue() {
        return typeCase_ == 11;
      }
      /**
       * <code>.Quat quat_value = 11;</code>
       * @return The quatValue.
       */
      @java.lang.Override
      public godot.wire.Wire.Quat getQuatValue() {
        if (quatValueBuilder_ == null) {
          if (typeCase_ == 11) {
            return (godot.wire.Wire.Quat) type_;
          }
          return godot.wire.Wire.Quat.getDefaultInstance();
        } else {
          if (typeCase_ == 11) {
            return quatValueBuilder_.getMessage();
          }
          return godot.wire.Wire.Quat.getDefaultInstance();
        }
      }
      /**
       * <code>.Quat quat_value = 11;</code>
       */
      public Builder setQuatValue(godot.wire.Wire.Quat value) {
        if (quatValueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          type_ = value;
          onChanged();
        } else {
          quatValueBuilder_.setMessage(value);
        }
        typeCase_ = 11;
        return this;
      }
      /**
       * <code>.Quat quat_value = 11;</code>
       */
      public Builder setQuatValue(
          godot.wire.Wire.Quat.Builder builderForValue) {
        if (quatValueBuilder_ == null) {
          type_ = builderForValue.build();
          onChanged();
        } else {
          quatValueBuilder_.setMessage(builderForValue.build());
        }
        typeCase_ = 11;
        return this;
      }
      /**
       * <code>.Quat quat_value = 11;</code>
       */
      public Builder mergeQuatValue(godot.wire.Wire.Quat value) {
        if (quatValueBuilder_ == null) {
          if (typeCase_ == 11 &&
              type_ != godot.wire.Wire.Quat.getDefaultInstance()) {
            type_ = godot.wire.Wire.Quat.newBuilder((godot.wire.Wire.Quat) type_)
                .mergeFrom(value).buildPartial();
          } else {
            type_ = value;
          }
          onChanged();
        } else {
          if (typeCase_ == 11) {
            quatValueBuilder_.mergeFrom(value);
          }
          quatValueBuilder_.setMessage(value);
        }
        typeCase_ = 11;
        return this;
      }
      /**
       * <code>.Quat quat_value = 11;</code>
       */
      public Builder clearQuatValue() {
        if (quatValueBuilder_ == null) {
          if (typeCase_ == 11) {
            typeCase_ = 0;
            type_ = null;
            onChanged();
          }
        } else {
          if (typeCase_ == 11) {
            typeCase_ = 0;
            type_ = null;
          }
          quatValueBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.Quat quat_value = 11;</code>
       */
      public godot.wire.Wire.Quat.Builder getQuatValueBuilder() {
        return getQuatValueFieldBuilder().getBuilder();
      }
      /**
       * <code>.Quat quat_value = 11;</code>
       */
      @java.lang.Override
      public godot.wire.Wire.QuatOrBuilder getQuatValueOrBuilder() {
        if ((typeCase_ == 11) && (quatValueBuilder_ != null)) {
          return quatValueBuilder_.getMessageOrBuilder();
        } else {
          if (typeCase_ == 11) {
            return (godot.wire.Wire.Quat) type_;
          }
          return godot.wire.Wire.Quat.getDefaultInstance();
        }
      }
      /**
       * <code>.Quat quat_value = 11;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          godot.wire.Wire.Quat, godot.wire.Wire.Quat.Builder, godot.wire.Wire.QuatOrBuilder> 
          getQuatValueFieldBuilder() {
        if (quatValueBuilder_ == null) {
          if (!(typeCase_ == 11)) {
            type_ = godot.wire.Wire.Quat.getDefaultInstance();
          }
          quatValueBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              godot.wire.Wire.Quat, godot.wire.Wire.Quat.Builder, godot.wire.Wire.QuatOrBuilder>(
                  (godot.wire.Wire.Quat) type_,
                  getParentForChildren(),
                  isClean());
          type_ = null;
        }
        typeCase_ = 11;
        onChanged();;
        return quatValueBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          godot.wire.Wire.AABB, godot.wire.Wire.AABB.Builder, godot.wire.Wire.AABBOrBuilder> aabbValueBuilder_;
      /**
       * <code>.AABB aabb_value = 12;</code>
       * @return Whether the aabbValue field is set.
       */
      @java.lang.Override
      public boolean hasAabbValue() {
        return typeCase_ == 12;
      }
      /**
       * <code>.AABB aabb_value = 12;</code>
       * @return The aabbValue.
       */
      @java.lang.Override
      public godot.wire.Wire.AABB getAabbValue() {
        if (aabbValueBuilder_ == null) {
          if (typeCase_ == 12) {
            return (godot.wire.Wire.AABB) type_;
          }
          return godot.wire.Wire.AABB.getDefaultInstance();
        } else {
          if (typeCase_ == 12) {
            return aabbValueBuilder_.getMessage();
          }
          return godot.wire.Wire.AABB.getDefaultInstance();
        }
      }
      /**
       * <code>.AABB aabb_value = 12;</code>
       */
      public Builder setAabbValue(godot.wire.Wire.AABB value) {
        if (aabbValueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          type_ = value;
          onChanged();
        } else {
          aabbValueBuilder_.setMessage(value);
        }
        typeCase_ = 12;
        return this;
      }
      /**
       * <code>.AABB aabb_value = 12;</code>
       */
      public Builder setAabbValue(
          godot.wire.Wire.AABB.Builder builderForValue) {
        if (aabbValueBuilder_ == null) {
          type_ = builderForValue.build();
          onChanged();
        } else {
          aabbValueBuilder_.setMessage(builderForValue.build());
        }
        typeCase_ = 12;
        return this;
      }
      /**
       * <code>.AABB aabb_value = 12;</code>
       */
      public Builder mergeAabbValue(godot.wire.Wire.AABB value) {
        if (aabbValueBuilder_ == null) {
          if (typeCase_ == 12 &&
              type_ != godot.wire.Wire.AABB.getDefaultInstance()) {
            type_ = godot.wire.Wire.AABB.newBuilder((godot.wire.Wire.AABB) type_)
                .mergeFrom(value).buildPartial();
          } else {
            type_ = value;
          }
          onChanged();
        } else {
          if (typeCase_ == 12) {
            aabbValueBuilder_.mergeFrom(value);
          }
          aabbValueBuilder_.setMessage(value);
        }
        typeCase_ = 12;
        return this;
      }
      /**
       * <code>.AABB aabb_value = 12;</code>
       */
      public Builder clearAabbValue() {
        if (aabbValueBuilder_ == null) {
          if (typeCase_ == 12) {
            typeCase_ = 0;
            type_ = null;
            onChanged();
          }
        } else {
          if (typeCase_ == 12) {
            typeCase_ = 0;
            type_ = null;
          }
          aabbValueBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.AABB aabb_value = 12;</code>
       */
      public godot.wire.Wire.AABB.Builder getAabbValueBuilder() {
        return getAabbValueFieldBuilder().getBuilder();
      }
      /**
       * <code>.AABB aabb_value = 12;</code>
       */
      @java.lang.Override
      public godot.wire.Wire.AABBOrBuilder getAabbValueOrBuilder() {
        if ((typeCase_ == 12) && (aabbValueBuilder_ != null)) {
          return aabbValueBuilder_.getMessageOrBuilder();
        } else {
          if (typeCase_ == 12) {
            return (godot.wire.Wire.AABB) type_;
          }
          return godot.wire.Wire.AABB.getDefaultInstance();
        }
      }
      /**
       * <code>.AABB aabb_value = 12;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          godot.wire.Wire.AABB, godot.wire.Wire.AABB.Builder, godot.wire.Wire.AABBOrBuilder> 
          getAabbValueFieldBuilder() {
        if (aabbValueBuilder_ == null) {
          if (!(typeCase_ == 12)) {
            type_ = godot.wire.Wire.AABB.getDefaultInstance();
          }
          aabbValueBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              godot.wire.Wire.AABB, godot.wire.Wire.AABB.Builder, godot.wire.Wire.AABBOrBuilder>(
                  (godot.wire.Wire.AABB) type_,
                  getParentForChildren(),
                  isClean());
          type_ = null;
        }
        typeCase_ = 12;
        onChanged();;
        return aabbValueBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          godot.wire.Wire.Basis, godot.wire.Wire.Basis.Builder, godot.wire.Wire.BasisOrBuilder> basisValueBuilder_;
      /**
       * <code>.Basis basis_value = 13;</code>
       * @return Whether the basisValue field is set.
       */
      @java.lang.Override
      public boolean hasBasisValue() {
        return typeCase_ == 13;
      }
      /**
       * <code>.Basis basis_value = 13;</code>
       * @return The basisValue.
       */
      @java.lang.Override
      public godot.wire.Wire.Basis getBasisValue() {
        if (basisValueBuilder_ == null) {
          if (typeCase_ == 13) {
            return (godot.wire.Wire.Basis) type_;
          }
          return godot.wire.Wire.Basis.getDefaultInstance();
        } else {
          if (typeCase_ == 13) {
            return basisValueBuilder_.getMessage();
          }
          return godot.wire.Wire.Basis.getDefaultInstance();
        }
      }
      /**
       * <code>.Basis basis_value = 13;</code>
       */
      public Builder setBasisValue(godot.wire.Wire.Basis value) {
        if (basisValueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          type_ = value;
          onChanged();
        } else {
          basisValueBuilder_.setMessage(value);
        }
        typeCase_ = 13;
        return this;
      }
      /**
       * <code>.Basis basis_value = 13;</code>
       */
      public Builder setBasisValue(
          godot.wire.Wire.Basis.Builder builderForValue) {
        if (basisValueBuilder_ == null) {
          type_ = builderForValue.build();
          onChanged();
        } else {
          basisValueBuilder_.setMessage(builderForValue.build());
        }
        typeCase_ = 13;
        return this;
      }
      /**
       * <code>.Basis basis_value = 13;</code>
       */
      public Builder mergeBasisValue(godot.wire.Wire.Basis value) {
        if (basisValueBuilder_ == null) {
          if (typeCase_ == 13 &&
              type_ != godot.wire.Wire.Basis.getDefaultInstance()) {
            type_ = godot.wire.Wire.Basis.newBuilder((godot.wire.Wire.Basis) type_)
                .mergeFrom(value).buildPartial();
          } else {
            type_ = value;
          }
          onChanged();
        } else {
          if (typeCase_ == 13) {
            basisValueBuilder_.mergeFrom(value);
          }
          basisValueBuilder_.setMessage(value);
        }
        typeCase_ = 13;
        return this;
      }
      /**
       * <code>.Basis basis_value = 13;</code>
       */
      public Builder clearBasisValue() {
        if (basisValueBuilder_ == null) {
          if (typeCase_ == 13) {
            typeCase_ = 0;
            type_ = null;
            onChanged();
          }
        } else {
          if (typeCase_ == 13) {
            typeCase_ = 0;
            type_ = null;
          }
          basisValueBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.Basis basis_value = 13;</code>
       */
      public godot.wire.Wire.Basis.Builder getBasisValueBuilder() {
        return getBasisValueFieldBuilder().getBuilder();
      }
      /**
       * <code>.Basis basis_value = 13;</code>
       */
      @java.lang.Override
      public godot.wire.Wire.BasisOrBuilder getBasisValueOrBuilder() {
        if ((typeCase_ == 13) && (basisValueBuilder_ != null)) {
          return basisValueBuilder_.getMessageOrBuilder();
        } else {
          if (typeCase_ == 13) {
            return (godot.wire.Wire.Basis) type_;
          }
          return godot.wire.Wire.Basis.getDefaultInstance();
        }
      }
      /**
       * <code>.Basis basis_value = 13;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          godot.wire.Wire.Basis, godot.wire.Wire.Basis.Builder, godot.wire.Wire.BasisOrBuilder> 
          getBasisValueFieldBuilder() {
        if (basisValueBuilder_ == null) {
          if (!(typeCase_ == 13)) {
            type_ = godot.wire.Wire.Basis.getDefaultInstance();
          }
          basisValueBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              godot.wire.Wire.Basis, godot.wire.Wire.Basis.Builder, godot.wire.Wire.BasisOrBuilder>(
                  (godot.wire.Wire.Basis) type_,
                  getParentForChildren(),
                  isClean());
          type_ = null;
        }
        typeCase_ = 13;
        onChanged();;
        return basisValueBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          godot.wire.Wire.Transform, godot.wire.Wire.Transform.Builder, godot.wire.Wire.TransformOrBuilder> transformValueBuilder_;
      /**
       * <code>.Transform transform_value = 14;</code>
       * @return Whether the transformValue field is set.
       */
      @java.lang.Override
      public boolean hasTransformValue() {
        return typeCase_ == 14;
      }
      /**
       * <code>.Transform transform_value = 14;</code>
       * @return The transformValue.
       */
      @java.lang.Override
      public godot.wire.Wire.Transform getTransformValue() {
        if (transformValueBuilder_ == null) {
          if (typeCase_ == 14) {
            return (godot.wire.Wire.Transform) type_;
          }
          return godot.wire.Wire.Transform.getDefaultInstance();
        } else {
          if (typeCase_ == 14) {
            return transformValueBuilder_.getMessage();
          }
          return godot.wire.Wire.Transform.getDefaultInstance();
        }
      }
      /**
       * <code>.Transform transform_value = 14;</code>
       */
      public Builder setTransformValue(godot.wire.Wire.Transform value) {
        if (transformValueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          type_ = value;
          onChanged();
        } else {
          transformValueBuilder_.setMessage(value);
        }
        typeCase_ = 14;
        return this;
      }
      /**
       * <code>.Transform transform_value = 14;</code>
       */
      public Builder setTransformValue(
          godot.wire.Wire.Transform.Builder builderForValue) {
        if (transformValueBuilder_ == null) {
          type_ = builderForValue.build();
          onChanged();
        } else {
          transformValueBuilder_.setMessage(builderForValue.build());
        }
        typeCase_ = 14;
        return this;
      }
      /**
       * <code>.Transform transform_value = 14;</code>
       */
      public Builder mergeTransformValue(godot.wire.Wire.Transform value) {
        if (transformValueBuilder_ == null) {
          if (typeCase_ == 14 &&
              type_ != godot.wire.Wire.Transform.getDefaultInstance()) {
            type_ = godot.wire.Wire.Transform.newBuilder((godot.wire.Wire.Transform) type_)
                .mergeFrom(value).buildPartial();
          } else {
            type_ = value;
          }
          onChanged();
        } else {
          if (typeCase_ == 14) {
            transformValueBuilder_.mergeFrom(value);
          }
          transformValueBuilder_.setMessage(value);
        }
        typeCase_ = 14;
        return this;
      }
      /**
       * <code>.Transform transform_value = 14;</code>
       */
      public Builder clearTransformValue() {
        if (transformValueBuilder_ == null) {
          if (typeCase_ == 14) {
            typeCase_ = 0;
            type_ = null;
            onChanged();
          }
        } else {
          if (typeCase_ == 14) {
            typeCase_ = 0;
            type_ = null;
          }
          transformValueBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.Transform transform_value = 14;</code>
       */
      public godot.wire.Wire.Transform.Builder getTransformValueBuilder() {
        return getTransformValueFieldBuilder().getBuilder();
      }
      /**
       * <code>.Transform transform_value = 14;</code>
       */
      @java.lang.Override
      public godot.wire.Wire.TransformOrBuilder getTransformValueOrBuilder() {
        if ((typeCase_ == 14) && (transformValueBuilder_ != null)) {
          return transformValueBuilder_.getMessageOrBuilder();
        } else {
          if (typeCase_ == 14) {
            return (godot.wire.Wire.Transform) type_;
          }
          return godot.wire.Wire.Transform.getDefaultInstance();
        }
      }
      /**
       * <code>.Transform transform_value = 14;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          godot.wire.Wire.Transform, godot.wire.Wire.Transform.Builder, godot.wire.Wire.TransformOrBuilder> 
          getTransformValueFieldBuilder() {
        if (transformValueBuilder_ == null) {
          if (!(typeCase_ == 14)) {
            type_ = godot.wire.Wire.Transform.getDefaultInstance();
          }
          transformValueBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              godot.wire.Wire.Transform, godot.wire.Wire.Transform.Builder, godot.wire.Wire.TransformOrBuilder>(
                  (godot.wire.Wire.Transform) type_,
                  getParentForChildren(),
                  isClean());
          type_ = null;
        }
        typeCase_ = 14;
        onChanged();;
        return transformValueBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:KVariant)
    }

    // @@protoc_insertion_point(class_scope:KVariant)
    private static final godot.wire.Wire.KVariant DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new godot.wire.Wire.KVariant();
    }

    public static godot.wire.Wire.KVariant getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<KVariant>
        PARSER = new com.google.protobuf.AbstractParser<KVariant>() {
      @java.lang.Override
      public KVariant parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new KVariant(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<KVariant> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<KVariant> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public godot.wire.Wire.KVariant getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface KReturnValueOrBuilder extends
      // @@protoc_insertion_point(interface_extends:KReturnValue)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.KVariant data = 1;</code>
     * @return Whether the data field is set.
     */
    boolean hasData();
    /**
     * <code>.KVariant data = 1;</code>
     * @return The data.
     */
    godot.wire.Wire.KVariant getData();
    /**
     * <code>.KVariant data = 1;</code>
     */
    godot.wire.Wire.KVariantOrBuilder getDataOrBuilder();
  }
  /**
   * Protobuf type {@code KReturnValue}
   */
  public static final class KReturnValue extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:KReturnValue)
      KReturnValueOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use KReturnValue.newBuilder() to construct.
    private KReturnValue(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private KReturnValue() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new KReturnValue();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private KReturnValue(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              godot.wire.Wire.KVariant.Builder subBuilder = null;
              if (data_ != null) {
                subBuilder = data_.toBuilder();
              }
              data_ = input.readMessage(godot.wire.Wire.KVariant.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(data_);
                data_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return godot.wire.Wire.internal_static_KReturnValue_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return godot.wire.Wire.internal_static_KReturnValue_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              godot.wire.Wire.KReturnValue.class, godot.wire.Wire.KReturnValue.Builder.class);
    }

    public static final int DATA_FIELD_NUMBER = 1;
    private godot.wire.Wire.KVariant data_;
    /**
     * <code>.KVariant data = 1;</code>
     * @return Whether the data field is set.
     */
    @java.lang.Override
    public boolean hasData() {
      return data_ != null;
    }
    /**
     * <code>.KVariant data = 1;</code>
     * @return The data.
     */
    @java.lang.Override
    public godot.wire.Wire.KVariant getData() {
      return data_ == null ? godot.wire.Wire.KVariant.getDefaultInstance() : data_;
    }
    /**
     * <code>.KVariant data = 1;</code>
     */
    @java.lang.Override
    public godot.wire.Wire.KVariantOrBuilder getDataOrBuilder() {
      return getData();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (data_ != null) {
        output.writeMessage(1, getData());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (data_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getData());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof godot.wire.Wire.KReturnValue)) {
        return super.equals(obj);
      }
      godot.wire.Wire.KReturnValue other = (godot.wire.Wire.KReturnValue) obj;

      if (hasData() != other.hasData()) return false;
      if (hasData()) {
        if (!getData()
            .equals(other.getData())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasData()) {
        hash = (37 * hash) + DATA_FIELD_NUMBER;
        hash = (53 * hash) + getData().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static godot.wire.Wire.KReturnValue parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static godot.wire.Wire.KReturnValue parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static godot.wire.Wire.KReturnValue parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static godot.wire.Wire.KReturnValue parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static godot.wire.Wire.KReturnValue parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static godot.wire.Wire.KReturnValue parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static godot.wire.Wire.KReturnValue parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static godot.wire.Wire.KReturnValue parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static godot.wire.Wire.KReturnValue parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static godot.wire.Wire.KReturnValue parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static godot.wire.Wire.KReturnValue parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static godot.wire.Wire.KReturnValue parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(godot.wire.Wire.KReturnValue prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code KReturnValue}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:KReturnValue)
        godot.wire.Wire.KReturnValueOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return godot.wire.Wire.internal_static_KReturnValue_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return godot.wire.Wire.internal_static_KReturnValue_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                godot.wire.Wire.KReturnValue.class, godot.wire.Wire.KReturnValue.Builder.class);
      }

      // Construct using godot.wire.Wire.KReturnValue.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (dataBuilder_ == null) {
          data_ = null;
        } else {
          data_ = null;
          dataBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return godot.wire.Wire.internal_static_KReturnValue_descriptor;
      }

      @java.lang.Override
      public godot.wire.Wire.KReturnValue getDefaultInstanceForType() {
        return godot.wire.Wire.KReturnValue.getDefaultInstance();
      }

      @java.lang.Override
      public godot.wire.Wire.KReturnValue build() {
        godot.wire.Wire.KReturnValue result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public godot.wire.Wire.KReturnValue buildPartial() {
        godot.wire.Wire.KReturnValue result = new godot.wire.Wire.KReturnValue(this);
        if (dataBuilder_ == null) {
          result.data_ = data_;
        } else {
          result.data_ = dataBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof godot.wire.Wire.KReturnValue) {
          return mergeFrom((godot.wire.Wire.KReturnValue)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(godot.wire.Wire.KReturnValue other) {
        if (other == godot.wire.Wire.KReturnValue.getDefaultInstance()) return this;
        if (other.hasData()) {
          mergeData(other.getData());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        godot.wire.Wire.KReturnValue parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (godot.wire.Wire.KReturnValue) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private godot.wire.Wire.KVariant data_;
      private com.google.protobuf.SingleFieldBuilderV3<
          godot.wire.Wire.KVariant, godot.wire.Wire.KVariant.Builder, godot.wire.Wire.KVariantOrBuilder> dataBuilder_;
      /**
       * <code>.KVariant data = 1;</code>
       * @return Whether the data field is set.
       */
      public boolean hasData() {
        return dataBuilder_ != null || data_ != null;
      }
      /**
       * <code>.KVariant data = 1;</code>
       * @return The data.
       */
      public godot.wire.Wire.KVariant getData() {
        if (dataBuilder_ == null) {
          return data_ == null ? godot.wire.Wire.KVariant.getDefaultInstance() : data_;
        } else {
          return dataBuilder_.getMessage();
        }
      }
      /**
       * <code>.KVariant data = 1;</code>
       */
      public Builder setData(godot.wire.Wire.KVariant value) {
        if (dataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          data_ = value;
          onChanged();
        } else {
          dataBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.KVariant data = 1;</code>
       */
      public Builder setData(
          godot.wire.Wire.KVariant.Builder builderForValue) {
        if (dataBuilder_ == null) {
          data_ = builderForValue.build();
          onChanged();
        } else {
          dataBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.KVariant data = 1;</code>
       */
      public Builder mergeData(godot.wire.Wire.KVariant value) {
        if (dataBuilder_ == null) {
          if (data_ != null) {
            data_ =
              godot.wire.Wire.KVariant.newBuilder(data_).mergeFrom(value).buildPartial();
          } else {
            data_ = value;
          }
          onChanged();
        } else {
          dataBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.KVariant data = 1;</code>
       */
      public Builder clearData() {
        if (dataBuilder_ == null) {
          data_ = null;
          onChanged();
        } else {
          data_ = null;
          dataBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.KVariant data = 1;</code>
       */
      public godot.wire.Wire.KVariant.Builder getDataBuilder() {
        
        onChanged();
        return getDataFieldBuilder().getBuilder();
      }
      /**
       * <code>.KVariant data = 1;</code>
       */
      public godot.wire.Wire.KVariantOrBuilder getDataOrBuilder() {
        if (dataBuilder_ != null) {
          return dataBuilder_.getMessageOrBuilder();
        } else {
          return data_ == null ?
              godot.wire.Wire.KVariant.getDefaultInstance() : data_;
        }
      }
      /**
       * <code>.KVariant data = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          godot.wire.Wire.KVariant, godot.wire.Wire.KVariant.Builder, godot.wire.Wire.KVariantOrBuilder> 
          getDataFieldBuilder() {
        if (dataBuilder_ == null) {
          dataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              godot.wire.Wire.KVariant, godot.wire.Wire.KVariant.Builder, godot.wire.Wire.KVariantOrBuilder>(
                  getData(),
                  getParentForChildren(),
                  isClean());
          data_ = null;
        }
        return dataBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:KReturnValue)
    }

    // @@protoc_insertion_point(class_scope:KReturnValue)
    private static final godot.wire.Wire.KReturnValue DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new godot.wire.Wire.KReturnValue();
    }

    public static godot.wire.Wire.KReturnValue getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<KReturnValue>
        PARSER = new com.google.protobuf.AbstractParser<KReturnValue>() {
      @java.lang.Override
      public KReturnValue parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new KReturnValue(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<KReturnValue> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<KReturnValue> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public godot.wire.Wire.KReturnValue getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface KFuncArgsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:KFuncArgs)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .KVariant args = 1;</code>
     */
    java.util.List<godot.wire.Wire.KVariant> 
        getArgsList();
    /**
     * <code>repeated .KVariant args = 1;</code>
     */
    godot.wire.Wire.KVariant getArgs(int index);
    /**
     * <code>repeated .KVariant args = 1;</code>
     */
    int getArgsCount();
    /**
     * <code>repeated .KVariant args = 1;</code>
     */
    java.util.List<? extends godot.wire.Wire.KVariantOrBuilder> 
        getArgsOrBuilderList();
    /**
     * <code>repeated .KVariant args = 1;</code>
     */
    godot.wire.Wire.KVariantOrBuilder getArgsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code KFuncArgs}
   */
  public static final class KFuncArgs extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:KFuncArgs)
      KFuncArgsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use KFuncArgs.newBuilder() to construct.
    private KFuncArgs(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private KFuncArgs() {
      args_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new KFuncArgs();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private KFuncArgs(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                args_ = new java.util.ArrayList<godot.wire.Wire.KVariant>();
                mutable_bitField0_ |= 0x00000001;
              }
              args_.add(
                  input.readMessage(godot.wire.Wire.KVariant.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          args_ = java.util.Collections.unmodifiableList(args_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return godot.wire.Wire.internal_static_KFuncArgs_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return godot.wire.Wire.internal_static_KFuncArgs_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              godot.wire.Wire.KFuncArgs.class, godot.wire.Wire.KFuncArgs.Builder.class);
    }

    public static final int ARGS_FIELD_NUMBER = 1;
    private java.util.List<godot.wire.Wire.KVariant> args_;
    /**
     * <code>repeated .KVariant args = 1;</code>
     */
    @java.lang.Override
    public java.util.List<godot.wire.Wire.KVariant> getArgsList() {
      return args_;
    }
    /**
     * <code>repeated .KVariant args = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends godot.wire.Wire.KVariantOrBuilder> 
        getArgsOrBuilderList() {
      return args_;
    }
    /**
     * <code>repeated .KVariant args = 1;</code>
     */
    @java.lang.Override
    public int getArgsCount() {
      return args_.size();
    }
    /**
     * <code>repeated .KVariant args = 1;</code>
     */
    @java.lang.Override
    public godot.wire.Wire.KVariant getArgs(int index) {
      return args_.get(index);
    }
    /**
     * <code>repeated .KVariant args = 1;</code>
     */
    @java.lang.Override
    public godot.wire.Wire.KVariantOrBuilder getArgsOrBuilder(
        int index) {
      return args_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < args_.size(); i++) {
        output.writeMessage(1, args_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < args_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, args_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof godot.wire.Wire.KFuncArgs)) {
        return super.equals(obj);
      }
      godot.wire.Wire.KFuncArgs other = (godot.wire.Wire.KFuncArgs) obj;

      if (!getArgsList()
          .equals(other.getArgsList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getArgsCount() > 0) {
        hash = (37 * hash) + ARGS_FIELD_NUMBER;
        hash = (53 * hash) + getArgsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static godot.wire.Wire.KFuncArgs parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static godot.wire.Wire.KFuncArgs parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static godot.wire.Wire.KFuncArgs parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static godot.wire.Wire.KFuncArgs parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static godot.wire.Wire.KFuncArgs parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static godot.wire.Wire.KFuncArgs parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static godot.wire.Wire.KFuncArgs parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static godot.wire.Wire.KFuncArgs parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static godot.wire.Wire.KFuncArgs parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static godot.wire.Wire.KFuncArgs parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static godot.wire.Wire.KFuncArgs parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static godot.wire.Wire.KFuncArgs parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(godot.wire.Wire.KFuncArgs prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code KFuncArgs}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:KFuncArgs)
        godot.wire.Wire.KFuncArgsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return godot.wire.Wire.internal_static_KFuncArgs_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return godot.wire.Wire.internal_static_KFuncArgs_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                godot.wire.Wire.KFuncArgs.class, godot.wire.Wire.KFuncArgs.Builder.class);
      }

      // Construct using godot.wire.Wire.KFuncArgs.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getArgsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (argsBuilder_ == null) {
          args_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          argsBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return godot.wire.Wire.internal_static_KFuncArgs_descriptor;
      }

      @java.lang.Override
      public godot.wire.Wire.KFuncArgs getDefaultInstanceForType() {
        return godot.wire.Wire.KFuncArgs.getDefaultInstance();
      }

      @java.lang.Override
      public godot.wire.Wire.KFuncArgs build() {
        godot.wire.Wire.KFuncArgs result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public godot.wire.Wire.KFuncArgs buildPartial() {
        godot.wire.Wire.KFuncArgs result = new godot.wire.Wire.KFuncArgs(this);
        int from_bitField0_ = bitField0_;
        if (argsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            args_ = java.util.Collections.unmodifiableList(args_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.args_ = args_;
        } else {
          result.args_ = argsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof godot.wire.Wire.KFuncArgs) {
          return mergeFrom((godot.wire.Wire.KFuncArgs)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(godot.wire.Wire.KFuncArgs other) {
        if (other == godot.wire.Wire.KFuncArgs.getDefaultInstance()) return this;
        if (argsBuilder_ == null) {
          if (!other.args_.isEmpty()) {
            if (args_.isEmpty()) {
              args_ = other.args_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureArgsIsMutable();
              args_.addAll(other.args_);
            }
            onChanged();
          }
        } else {
          if (!other.args_.isEmpty()) {
            if (argsBuilder_.isEmpty()) {
              argsBuilder_.dispose();
              argsBuilder_ = null;
              args_ = other.args_;
              bitField0_ = (bitField0_ & ~0x00000001);
              argsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getArgsFieldBuilder() : null;
            } else {
              argsBuilder_.addAllMessages(other.args_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        godot.wire.Wire.KFuncArgs parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (godot.wire.Wire.KFuncArgs) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<godot.wire.Wire.KVariant> args_ =
        java.util.Collections.emptyList();
      private void ensureArgsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          args_ = new java.util.ArrayList<godot.wire.Wire.KVariant>(args_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          godot.wire.Wire.KVariant, godot.wire.Wire.KVariant.Builder, godot.wire.Wire.KVariantOrBuilder> argsBuilder_;

      /**
       * <code>repeated .KVariant args = 1;</code>
       */
      public java.util.List<godot.wire.Wire.KVariant> getArgsList() {
        if (argsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(args_);
        } else {
          return argsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .KVariant args = 1;</code>
       */
      public int getArgsCount() {
        if (argsBuilder_ == null) {
          return args_.size();
        } else {
          return argsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .KVariant args = 1;</code>
       */
      public godot.wire.Wire.KVariant getArgs(int index) {
        if (argsBuilder_ == null) {
          return args_.get(index);
        } else {
          return argsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .KVariant args = 1;</code>
       */
      public Builder setArgs(
          int index, godot.wire.Wire.KVariant value) {
        if (argsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureArgsIsMutable();
          args_.set(index, value);
          onChanged();
        } else {
          argsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .KVariant args = 1;</code>
       */
      public Builder setArgs(
          int index, godot.wire.Wire.KVariant.Builder builderForValue) {
        if (argsBuilder_ == null) {
          ensureArgsIsMutable();
          args_.set(index, builderForValue.build());
          onChanged();
        } else {
          argsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .KVariant args = 1;</code>
       */
      public Builder addArgs(godot.wire.Wire.KVariant value) {
        if (argsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureArgsIsMutable();
          args_.add(value);
          onChanged();
        } else {
          argsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .KVariant args = 1;</code>
       */
      public Builder addArgs(
          int index, godot.wire.Wire.KVariant value) {
        if (argsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureArgsIsMutable();
          args_.add(index, value);
          onChanged();
        } else {
          argsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .KVariant args = 1;</code>
       */
      public Builder addArgs(
          godot.wire.Wire.KVariant.Builder builderForValue) {
        if (argsBuilder_ == null) {
          ensureArgsIsMutable();
          args_.add(builderForValue.build());
          onChanged();
        } else {
          argsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .KVariant args = 1;</code>
       */
      public Builder addArgs(
          int index, godot.wire.Wire.KVariant.Builder builderForValue) {
        if (argsBuilder_ == null) {
          ensureArgsIsMutable();
          args_.add(index, builderForValue.build());
          onChanged();
        } else {
          argsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .KVariant args = 1;</code>
       */
      public Builder addAllArgs(
          java.lang.Iterable<? extends godot.wire.Wire.KVariant> values) {
        if (argsBuilder_ == null) {
          ensureArgsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, args_);
          onChanged();
        } else {
          argsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .KVariant args = 1;</code>
       */
      public Builder clearArgs() {
        if (argsBuilder_ == null) {
          args_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          argsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .KVariant args = 1;</code>
       */
      public Builder removeArgs(int index) {
        if (argsBuilder_ == null) {
          ensureArgsIsMutable();
          args_.remove(index);
          onChanged();
        } else {
          argsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .KVariant args = 1;</code>
       */
      public godot.wire.Wire.KVariant.Builder getArgsBuilder(
          int index) {
        return getArgsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .KVariant args = 1;</code>
       */
      public godot.wire.Wire.KVariantOrBuilder getArgsOrBuilder(
          int index) {
        if (argsBuilder_ == null) {
          return args_.get(index);  } else {
          return argsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .KVariant args = 1;</code>
       */
      public java.util.List<? extends godot.wire.Wire.KVariantOrBuilder> 
           getArgsOrBuilderList() {
        if (argsBuilder_ != null) {
          return argsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(args_);
        }
      }
      /**
       * <code>repeated .KVariant args = 1;</code>
       */
      public godot.wire.Wire.KVariant.Builder addArgsBuilder() {
        return getArgsFieldBuilder().addBuilder(
            godot.wire.Wire.KVariant.getDefaultInstance());
      }
      /**
       * <code>repeated .KVariant args = 1;</code>
       */
      public godot.wire.Wire.KVariant.Builder addArgsBuilder(
          int index) {
        return getArgsFieldBuilder().addBuilder(
            index, godot.wire.Wire.KVariant.getDefaultInstance());
      }
      /**
       * <code>repeated .KVariant args = 1;</code>
       */
      public java.util.List<godot.wire.Wire.KVariant.Builder> 
           getArgsBuilderList() {
        return getArgsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          godot.wire.Wire.KVariant, godot.wire.Wire.KVariant.Builder, godot.wire.Wire.KVariantOrBuilder> 
          getArgsFieldBuilder() {
        if (argsBuilder_ == null) {
          argsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              godot.wire.Wire.KVariant, godot.wire.Wire.KVariant.Builder, godot.wire.Wire.KVariantOrBuilder>(
                  args_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          args_ = null;
        }
        return argsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:KFuncArgs)
    }

    // @@protoc_insertion_point(class_scope:KFuncArgs)
    private static final godot.wire.Wire.KFuncArgs DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new godot.wire.Wire.KFuncArgs();
    }

    public static godot.wire.Wire.KFuncArgs getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<KFuncArgs>
        PARSER = new com.google.protobuf.AbstractParser<KFuncArgs>() {
      @java.lang.Override
      public KFuncArgs parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new KFuncArgs(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<KFuncArgs> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<KFuncArgs> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public godot.wire.Wire.KFuncArgs getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Vector2_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Vector2_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Rect2_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Rect2_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Vector3_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Vector3_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Transform2D_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Transform2D_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Plane_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Plane_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Quat_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Quat_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_AABB_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_AABB_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Basis_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Basis_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Transform_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Transform_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_KVariant_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_KVariant_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_KReturnValue_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_KReturnValue_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_KFuncArgs_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_KFuncArgs_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\021protos/wire.proto\"\037\n\007Vector2\022\t\n\001x\030\001 \001(" +
      "\002\022\t\n\001y\030\002 \001(\002\";\n\005Rect2\022\032\n\010position\030\001 \001(\0132" +
      "\010.Vector2\022\026\n\004size\030\002 \001(\0132\010.Vector2\"*\n\007Vec" +
      "tor3\022\t\n\001x\030\001 \001(\002\022\t\n\001y\030\002 \001(\002\022\t\n\001z\030\003 \001(\002\"Q\n" +
      "\013Transform2D\022\023\n\001x\030\001 \001(\0132\010.Vector2\022\023\n\001y\030\002" +
      " \001(\0132\010.Vector2\022\030\n\006origin\030\003 \001(\0132\010.Vector2" +
      "\",\n\005Plane\022\030\n\006normal\030\001 \001(\0132\010.Vector3\022\t\n\001d" +
      "\030\002 \001(\002\"2\n\004Quat\022\t\n\001x\030\001 \001(\002\022\t\n\001y\030\002 \001(\002\022\t\n\001" +
      "z\030\003 \001(\002\022\t\n\001w\030\004 \001(\002\":\n\004AABB\022\032\n\010position\030\001" +
      " \001(\0132\010.Vector3\022\026\n\004size\030\002 \001(\0132\010.Vector3\"F" +
      "\n\005Basis\022\023\n\001x\030\001 \001(\0132\010.Vector3\022\023\n\001y\030\002 \001(\0132" +
      "\010.Vector3\022\023\n\001z\030\003 \001(\0132\010.Vector3\"<\n\tTransf" +
      "orm\022\025\n\005basis\030\001 \001(\0132\006.Basis\022\030\n\006origin\030\002 \001" +
      "(\0132\010.Vector3\"\260\003\n\010KVariant\022\023\n\tnil_value\030\001" +
      " \001(\005H\000\022\024\n\nbool_value\030\002 \001(\010H\000\022\024\n\nlong_val" +
      "ue\030\003 \001(\003H\000\022\024\n\nreal_value\030\004 \001(\001H\000\022\026\n\014stri" +
      "ng_value\030\005 \001(\tH\000\022!\n\rvector2_value\030\006 \001(\0132" +
      "\010.Vector2H\000\022\035\n\013rect2_value\030\007 \001(\0132\006.Rect2" +
      "H\000\022!\n\rvector3_value\030\010 \001(\0132\010.Vector3H\000\022)\n" +
      "\021transform2D_value\030\t \001(\0132\014.Transform2DH\000" +
      "\022\035\n\013plane_value\030\n \001(\0132\006.PlaneH\000\022\033\n\nquat_" +
      "value\030\013 \001(\0132\005.QuatH\000\022\033\n\naabb_value\030\014 \001(\013" +
      "2\005.AABBH\000\022\035\n\013basis_value\030\r \001(\0132\006.BasisH\000" +
      "\022%\n\017transform_value\030\016 \001(\0132\n.TransformH\000B" +
      "\006\n\004type\"\'\n\014KReturnValue\022\027\n\004data\030\001 \001(\0132\t." +
      "KVariant\"$\n\tKFuncArgs\022\027\n\004args\030\001 \003(\0132\t.KV" +
      "ariantB\014\n\ngodot.wireb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_Vector2_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_Vector2_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Vector2_descriptor,
        new java.lang.String[] { "X", "Y", });
    internal_static_Rect2_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_Rect2_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Rect2_descriptor,
        new java.lang.String[] { "Position", "Size", });
    internal_static_Vector3_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_Vector3_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Vector3_descriptor,
        new java.lang.String[] { "X", "Y", "Z", });
    internal_static_Transform2D_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_Transform2D_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Transform2D_descriptor,
        new java.lang.String[] { "X", "Y", "Origin", });
    internal_static_Plane_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_Plane_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Plane_descriptor,
        new java.lang.String[] { "Normal", "D", });
    internal_static_Quat_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_Quat_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Quat_descriptor,
        new java.lang.String[] { "X", "Y", "Z", "W", });
    internal_static_AABB_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_AABB_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_AABB_descriptor,
        new java.lang.String[] { "Position", "Size", });
    internal_static_Basis_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_Basis_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Basis_descriptor,
        new java.lang.String[] { "X", "Y", "Z", });
    internal_static_Transform_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_Transform_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Transform_descriptor,
        new java.lang.String[] { "Basis", "Origin", });
    internal_static_KVariant_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_KVariant_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_KVariant_descriptor,
        new java.lang.String[] { "NilValue", "BoolValue", "LongValue", "RealValue", "StringValue", "Vector2Value", "Rect2Value", "Vector3Value", "Transform2DValue", "PlaneValue", "QuatValue", "AabbValue", "BasisValue", "TransformValue", "Type", });
    internal_static_KReturnValue_descriptor =
      getDescriptor().getMessageTypes().get(10);
    internal_static_KReturnValue_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_KReturnValue_descriptor,
        new java.lang.String[] { "Data", });
    internal_static_KFuncArgs_descriptor =
      getDescriptor().getMessageTypes().get(11);
    internal_static_KFuncArgs_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_KFuncArgs_descriptor,
        new java.lang.String[] { "Args", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
